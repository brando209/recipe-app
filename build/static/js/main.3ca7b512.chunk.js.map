{"version":3,"sources":["pages/Page/Page.js","hooks/useAsync.js","hooks/useResource.js","api/recipes.js","api/auth.js","contexts/AuthContext/AuthContext.js","utility/localStorage/authStorage.js","contexts/RecipeContext/RecipeContext.js","components/app/RecipeCard/RecipeCard.js","components/app/RecipeCards/RecipeCards.js","pages/HomePage/HomePage.js","pages/FavoritesPage/FavoritesPage.js","components/input/SelectInput/SelectInput.js","components/input/IngredientInput/IngredientInput.js","components/input/TextareaListInput/TextareaListInput.js","components/input/InputContainer/InputContainer.js","components/input/InputList/InputList.js","components/input/CategoryInput/CategoryInput.js","utility/validationSchema/recipeSchema.js","components/display/spinners/Heart/Heart.js","components/display/buttons/LoadingHeart/LoadingHeart.js","components/form/NewRecipeForm/NewRecipeForm.js","contexts/DialogContext/DialogContext.js","pages/NewRecipePage/NewRecipePage.js","pages/SettingsPage/SettingsPage.js","components/display/List/List.js","components/app/RecipeDetails/RecipeDetails.js","pages/RecipePage/RecipePage.js","components/form/EditRecipeForm/EditRecipeForm.js","pages/EditRecipePage/EditRecipePage.js","components/form/LoginForm/LoginForm.js","pages/LoginPage/LoginPage.js","components/input/Search/Search.js","components/display/NavIconLink/NavIconLink.js","components/app/NavLinks/NavLinks.js","components/app/TopNav/TopNav.js","components/app/BottomNav/BottomNav.js","components/display/SlideinSidebar/SlideinSidebar.js","components/input/Autocomplete/Autocomplete.js","components/input/AutocompleteList/AutocompleteList.js","components/form/FilterRecipesForm/FilterRecipesForm.js","components/app/FilterControlSidebar/FilterControlSidebar.js","components/display/Dialog/Dialog.js","pages/GroceryListPage/GroceryListPage.js","App.js","hooks/useToggle.js","reportWebVitals.js","index.js"],"names":["Page","children","props","PageContainer","styled","div","useAsync","callback","dependencies","useState","loading","setLoading","error","setError","value","setValue","callbackMemoized","useCallback","then","catch","finally","useEffect","DEFAULT_OPTIONS","headers","useResource","path","options","isProtected","Promise","reject","token","authorization","split","undefined","axios","get","res","status","data","createRecipe","recipeInfo","post","updateRecipe","recipeId","updates","patch","deleteRecipe","delete","login","credentials","authContext","createContext","useAuth","useContext","currentToken","localStorage","getItem","AuthContextProvider","a","authApi","user","setItem","Provider","logout","removeItem","recipeContext","useRecipeContext","authHeader","Authorization","RecipeContextProvider","auth","ingredients","categories","search","filter","setFilter","recipeApi","recipe","prevValue","console","newValue","updatedIndex","findIndex","id","splice","deletedIndex","filteredValue","result","ingredient","ing","category","cat","searchText","toLowerCase","title","includes","description","map","name","join","instructions","comments","applyFilter","updateFilter","prev","RecipeCard","navigate","useNavigate","serves","prep","cook","favorite","photo","handleFavoriteClick","e","stopPropagation","onFavorite","StyledRecipeCard","CardBody","onClick","CardBodyLeft","Card","Title","className","Subtitle","time","unit","Text","CardBodyRight","Img","src","alt","Body","RecipeCards","recipes","length","to","RecipeCardContainer","HomePage","JSON","stringify","message","isFavorite","log","FavoritesPage","favoritedRecipes","SelectInput","placeholder","Button","as","option","IngredientInput","index","arrayHelpers","StyledIngredientInput","IngredientInputLeft","type","min","step","IngredientInputMiddle","size","variant","IngredientInputRight","remove","IngredientInputBottom","TextareaListInput","StyledTextareaListInput","rows","InputContainer","label","StyledInputContainer","numElements","htmlFor","child","InputList","listItems","renderItem","initialItemValue","render","StyledInputList","push","ListContainer","item","CategoryInput","StyledCategoryInput","NameInputContainer","TypeInputContainer","recipeSchema","Yup","shape","max","required","typeError","Heart","StyledHeart","LoadingHeart","isLoading","defaultText","loadingText","StyledLoadingHeart","disabled","NewRecipeForm","onSubmit","initialValues","isImporting","selectedFile","setSelectedFile","selectedImage","setSelectedImage","fileReader","FileReader","handleShowImage","evt","target","addEventListener","readAsDataURL","removeEventListener","enableReinitialize","values","setSubmitting","formData","FormData","append","validationSchema","isSubmitting","setFieldValue","FormError","component","Inputs","StyledImage","onChange","file","files","quantity","comment","img","ErrorMessage","dialogContext","useDialogContext","DialogContextProvider","show","setShow","text","body","footer","dialog","setDialog","NewRecipePage","importUrl","setImportUrl","importing","importedRecipe","handleImport","preventDefault","lastChild","form","err","SettingsPage","List","heading","listStyle","direction","listItemComponents","style","display","flexDirection","StyledList","RecipeDetails","onDelete","StyledRecipeDetails","RecipeDetailsTop","RecipeDetailsMiddle","RecipeDetailsBottom","listStyleType","padding","margin","Badge","RecipePage","useParams","find","rec","Number","replace","EditRecipeForm","onEdit","handleCancel","ingredientsObject","categoriesObject","ingredientValues","handleSubmit","StyledEditRecipeForm","EditRecipeFormTop","EditRecipeFormMiddle","EditRecipeFormBottom","Form","EditRecipePage","newValues","LoginForm","userName","password","autoComplete","LoginPage","handleLogin","LoginPageContainer","response","StyledSearch","Search","initialValue","inputRef","useRef","showClearBtn","setShowClearBtn","current","FormControl","onKeyPress","key","blur","ref","width","height","NavIconLink","IconComponent","IconFillComponent","textOnHover","pathname","useLocation","StyledNavIconLink","Link","Nav","Item","NavLinks","StyledNavLinks","House","HouseFill","HeartFill","PlusCircle","PlusCircleFill","Bag","BagFill","Calendar3","Calendar3Fill","Gear","GearFill","minWidth","maxWidth","TopNav","onShowFilter","StyledTopNav","sticky","Navbar","BottomNav","StyledBottomNav","fixed","SlideinSidebar","Offcanvas","onHide","onClose","Header","closeButton","Autocomplete","suggestions","userInput","setUserInput","filteredSuggestions","setFilteredSuggestions","activeSuggestion","setActiveSuggestion","showSuggestions","setShowSuggestions","submitValue","suggIdx","handleClick","clickedSuggestion","currentTarget","innerText","suggestionsListComponent","suggestion","input","newFilteredSuggestions","indexOf","onKeyDown","keyCode","prevActiveSuggestion","AutocompleteList","Row","Col","xs","FilterRecipesForm","initialFilter","handleClearFilters","FilterControlSidebar","Dialog","Modal","Footer","GroceryListPage","PrivateRoute","App","defaultValue","currentValue","useToggle","isShown","toggleShow","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ca7b512.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport default function Page({ children, ...props }) {\n    return (\n        <PageContainer {...props}>\n            { children }\n        </PageContainer>\n    );\n}\n\nconst PageContainer = styled.div`\n    background: var(--color-grey);\n    width: 100%;\n    margin: 0 auto;\n    padding: 0.5rem;\n    margin-bottom: 5rem;\n`","import { useCallback, useEffect, useState } from \"react\";\n\nexport default function useAsync(callback, dependencies = []) {\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState()\n  const [value, setValue] = useState()\n\n  const callbackMemoized = useCallback(() => {\n    setLoading(true);\n    setError(null);\n    setValue(null);\n    callback && typeof callback === \"function\" && callback()\n      .then(setValue) \n      .catch(setError)\n      .finally(() => setLoading(false));\n  }, dependencies);\n\n  useEffect(() => {\n    callbackMemoized();\n  }, [callbackMemoized]);\n\n  return { loading, error, value, setLoading, setError, setValue }\n}","import useAsync from \"./useAsync\";\nimport axios from \"axios\";\n\nconst DEFAULT_OPTIONS = {\n    headers: { \"Content-Type\": \"application/json\" },\n}\n\nexport default function useResource(path, options = {}, isProtected = false, dependencies = []) {\n    return useAsync(() => {\n        if(!path) return Promise.reject(\"Path not provided\")\n        const token = options.headers?.authorization?.split(\" \")[1];\n        if(isProtected && (token === null || token === \"null\" || token === undefined || token === \"undefined\")) {\n            return Promise.reject(\"No valid auth token\");\n        }\n        return axios.get(path, { ...DEFAULT_OPTIONS, ...options }).then(res => {\n            if(res.status === 200) return res.data;\n        })\n    }, dependencies);\n}","import axios from 'axios';\n\nfunction createRecipe(recipeInfo, headers) {\n    return axios.post(\"/api/recipes\", recipeInfo, { headers });\n}\n\nfunction updateRecipe(recipeId, updates, headers) {\n    return axios.patch(`/api/recipes/${recipeId}`, updates, { headers });\n}\n\nfunction deleteRecipe(recipeId, headers) {\n    return axios.delete(`/api/recipes/${recipeId}`, { headers });\n}\n\nexport default {\n    createRecipe, updateRecipe, deleteRecipe\n}","import axios from 'axios';\n\nfunction login(credentials) {\n    return axios.post(`/api/auth/login`, credentials);\n}\n\nexport default { login };","import React, { createContext, useContext } from 'react';\nimport useResource from '../../hooks/useResource';\nimport authApi from '../../api/auth';\nimport { getLocalAuthToken, setLocalAuthToken, removeLocalAuthToken } from '../../utility/localStorage/authStorage';\n\nexport const authContext = createContext({});\n\nexport const useAuth = () => useContext(authContext);\n\nconst currentToken = getLocalAuthToken();\n\nexport default function AuthContextProvider({ children }) {\n    const { loading, error, value, setLoading, setError, setValue } = useResource(\n        '/api/auth/login',\n        { headers: { authorization: `BEARER ${currentToken}` } },\n        true,\n        [currentToken]\n    );\n\n    const login = async (credentials) => {\n        try {\n            setLoading(true);\n            setValue(null);\n            setError(null);\n            const user = await authApi.login(credentials);\n            setValue(user.data);\n            setLocalAuthToken(user.data.token);\n        } catch(err) {\n            setError(err);\n        }\n        setLoading(false);\n    }\n\n    const logout = () => {\n        setValue(null);\n        removeLocalAuthToken();\n    }\n\n    return (\n        <authContext.Provider value={{ loading, error, user: value, login, logout }}>\n            {children}\n        </authContext.Provider>\n    )\n}","export function setLocalAuthToken(token) {\n    localStorage.setItem(\"recipe_app_0246_auth_token\", token);\n}\n\nexport function getLocalAuthToken() {\n    return localStorage.getItem(\"recipe_app_0246_auth_token\");\n}\n\nexport function removeLocalAuthToken() {\n    localStorage.removeItem(\"recipe_app_0246_auth_token\");\n}","import React, { createContext, useContext, useState } from 'react';\nimport useResource from '../../hooks/useResource';\nimport recipeApi from '../../api/recipes';\nimport { useAuth } from '../AuthContext/AuthContext';\n\nexport const recipeContext = createContext({});\n\nexport const useRecipeContext = () => useContext(recipeContext);\n\nconst authHeader = (token) => ({ Authorization: `BEARER ${token}`});\n\nexport default function RecipeContextProvider({ children }) {\n    const auth = useAuth();\n    const { loading, error, value, setValue } = useResource(\n        '/api/recipes',\n        { headers: { authorization: `BEARER ${auth.user?.token}` } },\n        true,\n        [auth.user?.token]\n    );\n    const [filter, setFilter] = useState({ ingredients: [], categories: [], search: \"\" });\n\n    const applyFilter = (filter) => {\n        const { ingredients, categories, search } = filter;\n\n        let result = value;\n\n        //Filter by ingredients, result will include recipes that have all ingredients\n        if(ingredients) {\n            for(let ingredient of ingredients) {\n                result = result?.filter(recipe => {\n                    const index = recipe.ingredients.findIndex(ing => ing.id === ingredient.id)\n                    return index > -1;\n                });\n            }\n        }\n\n        //Filter by categories, result will include recipes that have all categories\n        if(categories) {\n            for(let category of categories) {\n                result = result?.filter(recipe => {\n                    const index = recipe.categories.findIndex(cat => cat.id === category.id)\n                    return index > -1;\n                });\n            }\n        }\n\n        //Filter out recipes that do not contain the search text\n        if(search) {\n            const searchText = search.toLowerCase();\n            result = result?.filter(recipe => (\n                recipe.title.toLowerCase().includes(searchText)\n                || recipe.description.toLowerCase().includes(searchText)\n                || recipe.ingredients.map(ing => ing.name).join(\" \").toLowerCase().includes(searchText)\n                || recipe.instructions.join(\" \").toLowerCase().includes(searchText)\n                || recipe.comments?.join(\" \").toLowerCase().includes(searchText)\n                || recipe.categories.map(cat => cat.name).join(\" \").toLowerCase().includes(searchText)\n            ));\n        }\n\n        return result;\n    }\n\n    const updateFilter = (filter) => {\n        setFilter(prev => ({ ...prev, ...filter}));\n    }\n    \n    const createRecipe = async (recipeInfo, callback = () => {}) => {\n        try {\n            //Make api call\n            const recipe = await recipeApi.createRecipe(recipeInfo, authHeader(auth.user.token));\n            //Update state with returned data\n            setValue(prevValue => ([...prevValue, recipe.data]));\n            callback(recipe.data, null);\n        } catch(err) {\n            console.error(\"Error:\", err);\n            callback(null, err);\n        }\n    }\n\n    const updateRecipe = async (recipeId, updates, callback = () => {}) => {\n        try {\n            //Make api call\n            const recipe = await recipeApi.updateRecipe(recipeId, updates, authHeader(auth.user.token));\n            //Update state with returned data\n            setValue(prevValue => {\n                const newValue = [...prevValue];\n                const updatedIndex = newValue.findIndex(value => value.id === recipe.data.id);\n                if(updatedIndex > -1) newValue.splice(updatedIndex, 1, recipe.data);\n                return newValue;\n            })\n            callback(recipe.data, null);\n        } catch(err) {\n            console.error(\"Error:\", err);\n            callback(null, err);\n        }\n    }\n\n    const deleteRecipe = async (recipeId, callback = () => {}) => {\n        try {\n            //Make api call\n            await recipeApi.deleteRecipe(recipeId, authHeader(auth.user.token));\n            //Remove recipe from state\n            setValue(prevValue => {\n                const newValue = [...prevValue];\n                const deletedIndex = newValue.findIndex(value => value.id === recipeId);\n                if(deletedIndex > -1) newValue.splice(deletedIndex, 1);\n                return newValue;\n            })\n            callback(true, null);\n        } catch(err) {\n            console.error(\"Error:\", err);\n            callback(null, err);\n        }\n    }\n\n    const filteredValue = applyFilter(filter);\n    \n    return (\n        <recipeContext.Provider value={{ loading, error, data: filteredValue, createRecipe, updateRecipe, deleteRecipe, updateFilter, filter }}>\n            {children}\n        </recipeContext.Provider>\n    )\n}","import styled from 'styled-components';\nimport Card from 'react-bootstrap/Card';\nimport { Heart, HeartFill } from 'react-bootstrap-icons';\nimport { useNavigate } from 'react-router';\n\nexport default function RecipeCard(props) {\n    const navigate = useNavigate();\n    const { title, description, serves, prep, cook, favorite, id, photo } = props;\n\n    const handleFavoriteClick = (e) => {\n        e.stopPropagation();\n        props.onFavorite(id, favorite);\n    }\n\n    return (\n        <StyledRecipeCard>\n            <CardBody onClick={() => navigate(`/recipe/${id}`)}>\n                <CardBodyLeft>\n                    <Card.Title className=\"recipe-card-title\">\n                        {title}{\" \"}\n                        <span className=\"favorite-btn\">\n                            {favorite ?\n                                <HeartFill onClick={handleFavoriteClick} /> :\n                                <Heart onClick={handleFavoriteClick} />\n                            }\n                        </span>\n                    </Card.Title>\n                    <Card.Subtitle className=\"recipe-info\">Serves: {serves}</Card.Subtitle>\n                    <Card.Subtitle className=\"recipe-info\">Prep: {prep.time + \" \" + prep.unit}</Card.Subtitle>\n                    <Card.Subtitle className=\"recipe-info\">Cook: {cook.time + \" \" + cook.unit}</Card.Subtitle>\n                    <Card.Text className=\"recipe-card-text\">\n                        {description}\n                    </Card.Text>\n                </CardBodyLeft>\n                <CardBodyRight>\n                    <Card.Img className=\"recipe-card-img\" src={photo.path ? `http://localhost:3005/${photo.path}` : \"\"} alt=\"\" />\n                </CardBodyRight>\n            </CardBody>\n        </StyledRecipeCard>\n    )\n}\n\nconst StyledRecipeCard = styled(Card)`\n    height: 15rem;\n    width: 90%;\n    max-width: 30rem;\n    margin: 0;\n    margin-bottom: 0.5rem;\n    background: var(--color-white);\n    overflow: hidden;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n\n    @media (min-width: 768px) {\n        width: 100%;\n        margin: 0.5rem;\n    }\n`\n\nconst CardBody = styled(Card.Body)`\n    display: flex;\n    flex-direction: row;\n    height: 100%;\n`\n\nconst CardBodyLeft = styled.div`\n    text-align: left;\n    flex: 0.5;\n    min-width: 100px;\n    height: 100%;\n\n    .recipe-info {\n        margin: 0.5rem auto;\n        color: grey;\n        font-size: small;\n    }\n\n    .recipe-card-title {\n        font-size: medium;\n        min-height: 3.5rem;\n        \n        overflow: hidden;\n        text-overflow: ellipsis;\n        display: -webkit-box;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: 3;\n        line-clamp: 3; \n    }\n\n    .recipe-card-text {\n        position: absolute;\n        width: 90%;\n        margin: 1rem auto;\n        font-size: small;\n        \n        overflow: hidden;\n        text-overflow: ellipsis;\n        display: -webkit-box;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: 2;\n        line-clamp: 2; \n    }\n\n    .favorite-btn {\n        color: var(--color-red);\n    }\n\n    @media (min-width: 375px) {\n        .recipe-info {\n            font-size: medium;\n        }\n        .recipe-card-title {\n            font-size: large;\n        }\n    }\n\n    @media (min-width: 425px) {\n        .recipe-card-text {\n            position: relative;\n            width: 100%;\n            margin: 0.5rem auto;\n            \n            -webkit-line-clamp: 3;\n            line-clamp: 3; \n        }\n    }\n`\nconst CardBodyRight = styled.div`\n    text-align: right;\n    flex: 0.5;\n    padding-left: 1rem;\n    padding-bottom: 1rem;\n\n    > img {\n        width: 100%;\n        min-height: 150px;\n        max-height: 12rem;\n        aspect-ratio: 1 / 1;\n        object-fit: cover;\n        object-position: center;\n    }\n`","import styled from \"styled-components\"\nimport { Link } from 'react-router-dom'\nimport RecipeCard from \"../RecipeCard/RecipeCard\";\n\nfunction RecipeCards({ recipes, onFavorite }) {\n    if(recipes.length === 0) return (\n        <>\n            <p>You currently have no saved recipes.</p>\n            <p><Link to=\"/new\">Click here</Link> to add a new recipe.</p>\n        </>\n    );\n\n    return (\n        <RecipeCardContainer>\n            {recipes.map(recipe => (\n                <RecipeCard key={recipe.id} {...recipe} onFavorite={onFavorite} />\n            ))}\n        </RecipeCardContainer>\n    )\n}\n\nexport default RecipeCards\n\nconst RecipeCardContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center;\n    margin: 0 auto;\n`","import Page from '../Page/Page';\nimport { useRecipeContext } from '../../contexts/RecipeContext/RecipeContext';\nimport RecipeCards from '../../components/app/RecipeCards/RecipeCards';\n\nexport default function HomePage() {\n    const { data: recipes, updateRecipe, loading, error } = useRecipeContext();\n\n    const handleFavorite = (recipeId, isFavorite) => {\n        updateRecipe(recipeId, { favorite: !isFavorite }, () => console.log(\"toggled favorite\"));\n    }\n\n    return (\n        <Page>\n            <h1>Home</h1>\n            {loading && <p>Loading...</p>}\n            {error && <pre>{JSON.stringify(error.message, null, 2)}</pre>}\n            {!error && !loading && <RecipeCards onFavorite={handleFavorite} recipes={recipes} />}\n        </Page>\n    )   \n}\n","import Page from '../Page/Page';\nimport RecipeCards from '../../components/app/RecipeCards/RecipeCards';\nimport { useRecipeContext } from '../../contexts/RecipeContext/RecipeContext';\n\nexport default function FavoritesPage(props) {\n    const { data: recipes, updateRecipe, loading, error } = useRecipeContext();\n\n    //console.log(recipes) //TODO: Fix: logs <empty string> when no recipes (reason for extra check of length)\n    const favoritedRecipes = recipes && recipes.length > 0 && recipes?.filter(recipe => recipe.favorite);\n\n    const handleFavorite = (recipeId, isFavorite) => {\n        updateRecipe(recipeId, { favorite: !isFavorite });\n    }\n\n    return (\n        <Page>\n            <h1>Favorites</h1>\n            {loading && <p>Loading...</p>}\n            {error && <pre>{JSON.stringify(error.message, null, 2)}</pre>}\n            {!error && !loading && <RecipeCards onFavorite={handleFavorite} recipes={favoritedRecipes} />}\n        </Page>\n    )\n}","import React from 'react';\nimport Button from 'react-bootstrap/Button'\n\nexport default function SelectInput({ children, options, placeholder, ...props }) {\n    return (\n        <Button as=\"select\" {...props} >\n            { placeholder && <option value=\"\">{placeholder}</option>}\n            { options ? options.map(option => (<option key={option} value={option}>{option}</option>)) : children }\n        </Button>\n    )\n}","import styled from 'styled-components';\nimport { Field } from 'formik';\nimport { XSquare } from 'react-bootstrap-icons';\nimport { SelectInput } from '..';\n\nexport default function IngredientInput({ index, arrayHelpers }) {\n    return (\n        <StyledIngredientInput>\n            <IngredientInputLeft>\n                <Field\n                    name={`ingredients.${index}.name`} type=\"input\" placeholder={`Ingredient #${index + 1}`}\n                />\n                <Field\n                    name={`ingredients.${index}.quantity`} type=\"number\" placeholder=\"Amount\" min={0} step={0.01}\n                />\n            </IngredientInputLeft>\n            <IngredientInputMiddle>\n                <Field\n                    as={SelectInput} size=\"sm\" options={['small', 'medium', 'large']}\n                    name={`ingredients.${index}.size`} placeholder=\"size\"\n                    variant=\"secondary\"\n                />\n                <Field\n                    as={SelectInput} size=\"sm\" options={[\n                        'teaspoon', 'tablespoon', 'cup',\n                        'ounce', 'pound', 'milligram', 'gram', 'kilogram',\n                        'liter', 'milliliter', 'quart', 'pint', 'gallon',\n                        'pinch', 'piece',\n                        'slice', 'stick', 'clove',\n                        'can', 'box', 'bag', 'package'\n                    ]}\n                    name={`ingredients.${index}.unit`} placeholder=\"unit\"\n                    variant=\"secondary\"\n                />\n            </IngredientInputMiddle>\n            <IngredientInputRight>\n                <XSquare onClick={() => arrayHelpers.remove(index)}/>\n            </IngredientInputRight>\n            <IngredientInputBottom>\n                <Field name={`ingredients.${index}.comment`} type=\"input\" placeholder={\"Additional info\"}/>\n            </IngredientInputBottom>\n        </StyledIngredientInput>\n    )\n}\n\nconst StyledIngredientInput =styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    gap: 5px;\n    margin: 0.25rem auto;\n    border: 2px solid var(--color-red);\n    border-radius: 5px;\n    padding: 0.5rem;\n    background-color: var(--color-white);    \n    max-width: 450px;\n    width: 100%;\n\n    @media (min-width: 428px) {\n        width: 90%;\n    }\n\n    @media (min-width: 768px) {\n        width: 80%;\n    }\n`\n\nconst IngredientInputLeft =styled.div`\n    display: flex;\n    flex-direction: column;\n    flex: 0.5;\n    > input {\n        width: 100%;\n        margin: 0.25rem auto;\n    }\n`\nconst IngredientInputMiddle =styled.div`\n    flex: 0.3;\n    > select {\n        width: 100%;\n        margin: 0.25rem auto;\n        height: 30px;\n    }\n`\nconst IngredientInputRight =styled.div`\n    flex: 0.1;\n    > svg {\n        line-height: 1rem;\n        color: var(--color-red)\n    }\n    > svg:hover {\n        cursor: pointer;\n    }\n`\nconst IngredientInputBottom =styled.div`\n    flex-basis: 100%;\n    > input {\n        width: 100%;\n        margin-top: 0.25rem;\n    }\n`","import styled from 'styled-components';\nimport { Field } from 'formik';\nimport { XSquare } from 'react-bootstrap-icons';\n\nexport default function TextareaListInput({ name, index, arrayHelpers, placeholder }) {\n    return (\n        <StyledTextareaListInput>\n            <div>    \n                <Field \n                    name={`${name}.${index}`} as=\"textarea\" placeholder={`${placeholder} #${index+1}`} rows=\"3\"\n                />\n            </div>\n            <div>\n                <XSquare onClick={() => arrayHelpers.remove(index)}/>\n            </div>\n        </StyledTextareaListInput>\n    )\n}\n\nconst StyledTextareaListInput = styled.div`\n    display: flex;\n    justify-content: space-around;\n    gap: 5px;\n    max-width: 450px;\n    width: 100%;\n    padding: 0.5rem;\n    margin: 0.25rem auto;\n\n    > div > svg {\n        color: var(--color-red);\n    }\n\n    > div > svg:hover {\n        cursor: pointer;\n    }\n\n    > div:first-child {\n        flex: 0.9;\n    }\n\n    > div:nth-child(2) {\n        flex: 0.1;\n    }\n\n    @media (min-width: 428px) {\n        width: 90%;\n    }\n\n    @media (min-width: 768px) {\n        width: 80%;\n    }\n\n    > div > textarea {\n        width: 100%;\n    }\n`","import styled from 'styled-components';\n\nexport default function InputContainer({ name, label, children }) {\n    return (\n        <StyledInputContainer numElements={children?.length}>\n            <span>\n                <label htmlFor={name}>{label}</label>{\": \"}\n            </span>\n            <div>\n                {children.length > 0 ? children.map(child => <div>{child}</div>) : children}\n            </div>\n        </StyledInputContainer>\n    );\n}\n\nconst StyledInputContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 0.5rem auto;\n    > span {\n        font-weight: bold;\n        display: flex;\n        justify-content: flex-start;\n    }\n    > div {\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n        max-width: 450px;\n        \n        > input, > select,  > textarea, > div > input, > div > select, > div > textarea {\n            width: 100%;\n        }\n        \n        > div { /* If there are multiple children, each will be in a div with this target */\n            flex: ${props => 1 / props.numElements};\n            padding: 0 0.25rem;\n\n            :first-child {\n                padding-left: 0; \n            }\n\n            :last-child {\n                padding-right: 0;\n            }\n        }\n    }\n\n    @media (min-width: 428px) {\n        flex-direction: row;\n        > span {\n            flex: 0.3;\n            justify-content: flex-end;\n        }\n        > div {\n            flex: 0.7;\n            margin-left: 2rem;\n        }\n    }\n\n    @media (min-width: 1024px) {\n        > span {\n            flex: 0.4;\n        }\n    }\n`\n","import { FieldArray } from 'formik';\nimport { Button } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nexport default function InputList({ name, label, listItems, renderItem, initialItemValue }) {\n    return (\n        <FieldArray\n            name={name}\n            render={arrayHelpers => (\n                <StyledInputList>\n                    <span className=\"label-container\">\n                        <label htmlFor={name}>{label}</label>{\": \"}\n                    </span>\n                    <div className=\"add-btn-container\">\n                        <Button\n                            type=\"button\"\n                            size=\"sm\"\n                            variant=\"secondary\"\n                            onClick={() => arrayHelpers.push(initialItemValue)}\n                        >\n                            Add\n                        </Button>\n                    </div>\n                    <ListContainer>\n                        {listItems.map((item, index) => (\n                            renderItem(item, index, arrayHelpers)\n                        ))}\n                    </ListContainer>\n                </StyledInputList>\n            )}\n        />\n    );\n}\n\nconst StyledInputList = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    margin: 0.5rem auto;\n\n    .label-container {\n        display: flex;\n        justify-content: flex-start;\n        font-weight: bold;\n        flex: 0.3;\n    }\n    \n    .add-btn-container {\n        max-width: 450px;\n        text-align: left;\n        margin-left: 0.25rem;\n        flex: 0.7;\n    }\n\n    @media (min-width: 428px) {\n        .add-btn-container {\n            margin-left: 2rem;\n        }\n        .label-container {\n            justify-content: flex-end;\n        }\n    }\n\n    @media (min-width: 1024px) {\n        .label-container {\n            flex: 0.4;\n        }\n    }\n`\n\nconst ListContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex-basis: 100%;\n    \n    @media (min-width: 428px) {\n        padding-left: 6rem;\n    }\n\n    @media (min-width: 768px) {\n        padding-left: 8rem;\n    }\n\n    @media (min-width: 1024px) {\n        padding-left: 15%;\n    }\n`","import styled from 'styled-components';\nimport { Field } from 'formik';\nimport { XSquare } from 'react-bootstrap-icons';\nimport { SelectInput } from '..';\n\nexport default function CategoryInput({ index, arrayHelpers }) {\n    return (\n        <StyledCategoryInput>\n            <NameInputContainer>\n                <Field\n                    name={`categories.${index}.name`} type=\"input\" placeholder={`Category #${index + 1}`}\n                />\n            </NameInputContainer>\n            <TypeInputContainer>\n                <Field\n                    as={SelectInput} options={['other', 'flavor', 'meal', 'dish', 'cuisine']}\n                    size=\"sm\"\n                    name={`categories.${index}.type`}\n                    variant=\"secondary\"\n                />\n            </TypeInputContainer>\n            <XSquare onClick={() => arrayHelpers.remove(index)} />\n        </StyledCategoryInput>\n    )\n}\n\nconst StyledCategoryInput = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    gap: 5px;\n    width: 100%;\n    max-width: 450px;\n    margin: 0.25rem auto;\n\n    > svg {\n        flex: 1;\n        color: var(--color-red)\n    }\n\n    > svg:hover {\n        cursor: pointer;\n    }\n\n    @media (min-width: 428px) {\n        justify-content: flex-end;\n        width: 90%;\n    }\n`\n\nconst NameInputContainer = styled.div`\n    flex: 6;\n    > input {\n        width: 100%;\n    }\n`\n\nconst TypeInputContainer = styled.div`\n    flex: 4;\n    > select {\n        width: 100%;\n        max-width: 100px;\n    }\n`","import * as Yup from 'yup';\n\nconst recipeSchema = Yup.object().shape({\n    title: Yup.string()\n        .min(3, 'Too Short!')\n        .max(96, 'Too Long!')\n        .required('Please provide a title.'),\n    description: Yup.string().required(\"Please provide a description.\"),\n    prep: Yup.object({\n        time: Yup.number().typeError(\"Please provide a number for prep time\").required(\"Please provide a prep time\"),\n        unit: Yup.string().required(\"Required.\")\n    }),\n    cook: Yup.object({\n        time: Yup.number().typeError(\"Please provide a number for cook time\").required(\"Please provide a cook time\"),\n        unit: Yup.string().required(\"Required.\")\n    }),\n    ingredients: Yup.array().min(1, \"Please provide the ingredients list.\"),\n    instructions: Yup.array().min(1, \"Please provide the instructions list\").required(\"Please provide the instructions list.\"),\n    comments: Yup.array(),\n});\n\nexport default recipeSchema;","import styled from 'styled-components';\nimport { HeartFill } from 'react-bootstrap-icons';\n\nfunction Heart() {\n    return (\n        <StyledHeart>\n            <HeartFill className='heart-icon-spinner'/>\n        </StyledHeart>\n    )\n}\n\nexport default Heart;\n\nconst StyledHeart = styled.div`\n    width: 50px;\n\n    .heart-icon-spinner {\n        animation-name: heartbeat;\n        animation-duration: 0.5s;\n        animation-iteration-count: infinite;\n        color: red;\n    }\n\n    @keyframes heartbeat {\n        from {\n            height: 1rem;\n            width: 1rem;\n        }\n\n        20% {\n            height: 1rem;\n            width: 1rem;\n        }\n\n        80% {\n            height: 1.2rem; \n            width: 1.2rem;\n        }\n\n        to {\n            height: 1.2rem; \n            width: 1.2rem;\n        }\n    }\n`","import styled from 'styled-components';\nimport Button from 'react-bootstrap/Button';\nimport Heart from '../../spinners/Heart/Heart';\n\nfunction LoadingHeart({ isLoading, defaultText, loadingText, ...props }) {\n    return (\n        <StyledLoadingHeart disabled={isLoading} {...props}>\n            {isLoading ? \n                <div>\n                    <Heart /> {\" \"}\n                    {loadingText || \"Loading...\"}\n                </div>\n            :\n                defaultText || \"Load\"\n            }\n        </StyledLoadingHeart>\n    )\n}\n\nexport default LoadingHeart\n\nconst StyledLoadingHeart = styled(Button)`\n    justify-content: center;\n\n    > div {\n        display: flex;\n        flex-direction: row;\n        width: 150px;\n    }\n`","import React, { useEffect, useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Inputs from '../../input';\nimport recipeSchema from '../../../utility/validationSchema/recipeSchema';\n\nimport LoadingHeart from '../../display/buttons/LoadingHeart/LoadingHeart';\nimport styled from 'styled-components';\n\nexport default function NewRecipeForm({ onSubmit, initialValues, isImporting }) {\n    //This state is used when the user selects an image file from device\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [selectedImage, setSelectedImage] = useState(null);\n\n    //When a file is selected, convert file to dataurl for display\n    useEffect(() => {\n        const fileReader = new FileReader();\n        const handleShowImage = (evt) => {\n            setSelectedImage(evt.target.result);\n        }\n        fileReader.addEventListener(\"load\", handleShowImage, false);\n\n        if (selectedFile) fileReader.readAsDataURL(selectedFile);\n\n        return () => fileReader.removeEventListener(\"load\", handleShowImage);\n    }, [selectedFile]);\n\n    return (\n        <Formik\n            initialValues={initialValues}\n            enableReinitialize={true}\n            onSubmit={(values, { setSubmitting }) => {\n                const formData = new FormData();\n                formData.append(\"title\", values.title);\n                formData.append(\"description\", values.description);\n                formData.append(\"serves\", values.serves);\n                formData.append(\"prep\", JSON.stringify(values.prep));\n                formData.append(\"cook\", JSON.stringify(values.cook));\n                formData.append(\"ingredients\", JSON.stringify(values.ingredients));\n                formData.append(\"instructions\", JSON.stringify(values.instructions));\n                formData.append(\"comments\", JSON.stringify(values.comments));\n                formData.append(\"categories\", JSON.stringify(values.categories));\n                formData.append(\"photo\", values.photo || \"\");\n                setSubmitting(true);\n                onSubmit(formData, () => {\n                    setSubmitting(false);\n                });\n            }}\n            validationSchema={recipeSchema}\n        >\n            {({ isSubmitting, values, setFieldValue }) => (\n                <Form>\n                    <Inputs.InputContainer name=\"title\" label=\"Title\">\n                        <Field name=\"title\" placeholder=\"Recipe Title\" type=\"input\" />\n                    </Inputs.InputContainer>\n                    <FormError name=\"title\" component=\"div\" className=\"form-error-message\" />\n\n                    <Inputs.InputContainer name=\"description\" label=\"Description\">\n                        <Field name=\"description\" placeholder=\"Recipe Description\" as=\"textarea\" />\n                    </Inputs.InputContainer>\n                    <FormError name=\"description\" component=\"div\" className=\"form-error-message\" />\n\n\n                    <Inputs.InputContainer name=\"serves\" label=\"Serves\">\n                        <Field name=\"serves\" placeholder=\"Serves\" type=\"number\" min={1} />\n                    </Inputs.InputContainer>\n                    <FormError name=\"serves\" component=\"div\" className=\"form-error-message\" />\n\n\n                    <Inputs.InputContainer name=\"prep\" label=\"Prep\">\n                        <Field name=\"prep.time\" type=\"number\" min={1} />\n                        <Field name=\"prep.unit\" as={Inputs.SelectInput} options={['min', 'hr']} variant=\"secondary\" />\n                    </Inputs.InputContainer>\n                    <FormError name=\"prep.time\" component=\"div\" className=\"form-error-message\" />\n\n                    <Inputs.InputContainer name=\"cook\" label=\"Cook\">\n                        <Field name=\"cook.time\" type=\"number\" min={1} />\n                        <Field name=\"cook.unit\" as={Inputs.SelectInput} options={['min', 'hr']} variant=\"secondary\" />\n                    </Inputs.InputContainer>\n                    <FormError name=\"cook.time\" component=\"div\" className=\"form-error-message\" />\n\n                    {values.photo && <StyledImage src={values.photo && typeof values.photo === \"string\" ? values.photo : selectedImage} alt=\"\" />}\n\n                    <Inputs.InputContainer name=\"photo\" label=\"Image\">\n                        <Field\n                            type=\"file\"\n                            name=\"photo\"\n                            value={undefined}\n                            onChange={e => {\n                                const file = e.target.files[0];\n                                setFieldValue('photo', file);\n                                setSelectedFile(file);\n                            }}\n                        />\n                    </Inputs.InputContainer>\n\n                    <Inputs.InputList\n                        name=\"categories\" label=\"Categories\"\n                        listItems={values.categories}\n                        initialItemValue={{ name: \"\", type: \"\" }}\n                        renderItem={(item, index, arrayHelpers) => <Inputs.CategoryInput key={`category-${index}`} item={item} index={index} arrayHelpers={arrayHelpers} />}\n                    />\n                    <FormError name=\"categories\" component=\"div\" className=\"form-error-message\" />\n\n                    <Inputs.InputList\n                        name=\"ingredients\" label=\"Ingredients\"\n                        listItems={values.ingredients}\n                        initialItemValue={{ name: \"\", quantity: \"\", unit: \"\", size: \"\", comment: \"\" }}\n                        renderItem={(item, index, arrayHelpers) => <Inputs.IngredientInput key={`ingredient-${index}`} item={item} index={index} arrayHelpers={arrayHelpers} />}\n                    />\n                    <FormError name=\"ingredients\" component=\"div\" className=\"form-error-message\" />\n\n                    <Inputs.InputList\n                        name=\"instructions\" label=\"Instructions\"\n                        listItems={values.instructions}\n                        initialItemValue=\"\"\n                        renderItem={(item, index, arrayHelpers) => (\n                            <Inputs.TextareaListInput\n                                key={`instruction-${index}`}\n                                name=\"instructions\"\n                                placeholder=\"Instruction\"\n                                item={item} index={index} arrayHelpers={arrayHelpers}\n                            />\n                        )}\n                    />\n                    <FormError name=\"instructions\" component=\"div\" className=\"form-error-message\" />\n\n                    <Inputs.InputList\n                        name=\"comments\" label=\"Comments\"\n                        listItems={values.comments}\n                        initialItemValue=\"\"\n                        renderItem={(item, index, arrayHelpers) => (\n                            <Inputs.TextareaListInput\n                                key={`comment-${index}`}\n                                name=\"comments\"\n                                placeholder=\"Comment\"\n                                item={item} index={index} arrayHelpers={arrayHelpers}\n                            />\n                        )}\n                    />\n\n                    <LoadingHeart\n                        type=\"submit\"\n                        variant=\"secondary\"\n                        isLoading={isSubmitting || isImporting} \n                        defaultText=\"Submit\" loadingText=\"Submitting...\" \n                    />\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nconst StyledImage = styled.img`\n    width: 90%;\n    min-height: 150px;\n    max-height: 12rem;\n    aspect-ratio: 1 / 1;\n    object-fit: cover;\n    object-position: center;\n    border-radius: 5px;\n    margin: 0.25rem;\n    border: 2px solid var(--color-red);\n\n    @media (min-width: 428px) {\n        width: 80%;\n        margin-left: 20%; \n    }\n`\n\nconst FormError = styled(ErrorMessage)`\n    color: red;\n`","import React, { createContext, useContext, useState } from 'react';\nimport { Button } from 'react-bootstrap';\n\nexport const dialogContext = createContext({});\n\nexport const useDialogContext = () => useContext(dialogContext);\n\nexport default function DialogContextProvider({ children }) {\n    const [show, setShow] = useState(false);\n    const [dialog, setDialog] = useState({\n        title: \"Dialog Box\",\n        text: \"Dialog body text\",\n        body: <div>Body component</div>,\n        footer: <Button>Close</Button>,\n    })\n\n    return (\n        <dialogContext.Provider value={{ dialog, setDialog, show, setShow }}>\n            {children}\n        </dialogContext.Provider>\n    )\n}","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { useNavigate } from 'react-router';\nimport Page from '../Page/Page';\nimport NewRecipeForm from '../../components/form/NewRecipeForm/NewRecipeForm';\nimport { useRecipeContext } from '../../contexts/RecipeContext/RecipeContext';\nimport { useDialogContext } from '../../contexts/DialogContext/DialogContext';\nimport { useAuth } from '../../contexts/AuthContext/AuthContext';\nimport useResource from '../../hooks/useResource';\nimport LoadingHeart from '../../components/display/buttons/LoadingHeart/LoadingHeart';\n\nconst initialValues = {\n    title: \"\",\n    description: \"\",\n    serves: \"\",\n    prep: {\n        time: \"\",\n        unit: \"min\"\n    },\n    cook: {\n        time: \"\",\n        unit: \"min\"\n    },\n    ingredients: [],\n    instructions: [],\n    comments: [],\n    categories: [],\n    photo: null\n}\n\nexport default function NewRecipePage(props) {\n    const auth = useAuth();\n    const [importUrl, setImportUrl] = useState(null);\n    const { loading: importing, error, value: importedRecipe } = useResource(\n        importUrl,\n        { headers: { authorization: `BEARER ${auth.user?.token}` } },\n        true,\n        [importUrl]\n    );\n    const { setDialog, setShow } = useDialogContext();\n    const { createRecipe } = useRecipeContext();\n    const navigate = useNavigate();\n\n    const handleCreateRecipe = (recipeInfo, callback) => {\n        createRecipe(recipeInfo, (recipe, err) => {\n            if (err) console.error(err);\n            callback();\n            navigate('/');\n        });\n    }\n\n    const handleImport = (e) => {\n        e.preventDefault();\n        setImportUrl(`/api/recipes/import?importUrl=${e.target.lastChild.value}`);\n        setShow(false);\n    }\n\n    const handleImportClick = () => {\n        setDialog({\n            title: \"Import Recipe\",\n            text: \"Please enter the URL for the webpage containing the recipe you want to import.\",\n            body: (\n                <form onSubmit={handleImport} id=\"import-form\">\n                    <input type=\"text\" />\n                </form>\n            ),\n            footer: (\n                <>\n                    <Button variant=\"secondary\" onClick={() => setShow(false)}>Cancel</Button>\n                    <Button variant=\"secondary\" type=\"submit\" form=\"import-form\">Import</Button>\n                </>\n            )\n        });\n        setShow(true);\n    }\n\n    return (\n        <Page>\n            <h1>New Recipe</h1>\n            <LoadingHeart \n                variant=\"secondary\" \n                isLoading={importing}\n                defaultText=\"Import\"\n                loadingText=\"Importing...\"\n                onClick={handleImportClick} \n            />\n            <NewRecipeForm \n                onSubmit={handleCreateRecipe} \n                initialValues={importedRecipe || initialValues} \n                isImporting={importing} \n                error={error} \n            />\n        </Page>\n    );\n}","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport Page from '../Page/Page';\nimport { useAuth } from '../../contexts/AuthContext/AuthContext';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function SettingsPage(props) {\n    const navigate = useNavigate();\n    const { logout } = useAuth();\n\n    const handleLogout = () => {\n        logout();\n        navigate('/login');\n    }\n    \n    return (\n        <Page>\n            <h1>Settings</h1>\n\n            <Button onClick={handleLogout} variant=\"secondary\">Log Out</Button>\n        </Page>\n    );\n}","import styled from 'styled-components';\n\nfunction List({ \n    heading,\n    listItems,\n    renderItem,\n    listStyle,\n    type = \"ul\",\n    direction = \"vertical\"\n}) {\n    const listItemComponents = listItems && listItems.map((item, index) => (\n        <li key={index}>{typeof renderItem === \"function\" ? renderItem(item) : item}</li>\n    ));\n\n    const style = {\n        ...listStyle,\n        display: \"flex\",\n        flexDirection: `${direction === \"horizontal\" ? \"row\" : \"column\"}`\n    }\n\n    return (\n        <StyledList>\n            <h3>{heading}</h3>\n            {(listItems && listItems.length > 0) ?\n                (type === \"ul\") ?\n                    <ul style={style}>\n                        {listItemComponents}\n                    </ul> :\n                    <ol style={style}>\n                        {listItemComponents}\n                    </ol>\n                :\n                <p>This list is currently empty</p>\n            }\n        </StyledList>\n    )\n}\n\nexport default List;\n\nconst StyledList = styled.div`\n    > h3, > ul, > ol {\n        text-align: left;\n    }\n\n    > ul, > ol {\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n    }\n`","import styled from 'styled-components';\nimport { useNavigate } from 'react-router';\nimport { Row, Col, Button, Badge } from 'react-bootstrap';\nimport { Heart, HeartFill, Trash, PencilSquare } from 'react-bootstrap-icons';\nimport { useDialogContext } from '../../../contexts/DialogContext/DialogContext';\nimport List from '../../display/List/List';\n\nexport default function RecipeDetails({ recipe, onFavorite, onDelete }) {\n    const navigate = useNavigate();\n    const { setDialog, setShow } = useDialogContext();\n    const { id, title, description, ingredients, instructions, comments, categories, serves, prep, cook, photo, favorite } = recipe;\n\n    const handleFavoriteClick = () => onFavorite(id, favorite);\n\n    const handleDeleteClick = () => {\n        setDialog({\n            title: \"Delete Recipe\",\n            text: \"You are about to delete this recipe. This action cannot be undone. Are you sure you would like to delete this recipe?\",\n            footer: (\n                <>\n                    <Button variant=\"secondary\" onClick={() => setShow(false)}>Cancel</Button>\n                    <Button variant=\"secondary\" onClick={() => onDelete(id, () => setShow(false))}>Delete</Button>\n                </>\n            )\n        });\n        setShow(true);\n    }\n\n    const handleEditClick = () => {\n        navigate(`/recipe/${id}/edit`);\n    }\n\n    return (\n        <StyledRecipeDetails>\n            <RecipeDetailsTop>\n                <div>\n                    <h1>{title}</h1>\n                    {favorite ?\n                        <HeartFill onClick={handleFavoriteClick} /> :\n                        <Heart onClick={handleFavoriteClick} />\n                    }\n                </div>\n                <div>\n                    <PencilSquare onClick={handleEditClick} />\n                    <Trash onClick={handleDeleteClick} />\n                </div>\n            </RecipeDetailsTop>\n\n            <RecipeDetailsMiddle>\n                <img src={photo.path ? `/${photo.path}` : \"\"} alt=\"\" />\n                <div>\n                    <p>\n                        <label>Serves:&nbsp;</label>\n                        {serves}\n                    </p>\n                    <p>\n                        <label>Prep&nbsp;Time:&nbsp;</label>\n                        {prep.time}&nbsp;{prep.unit}\n                    </p>\n                    <p>\n                        <label>Cook&nbsp;Time:&nbsp;</label>\n                        {cook.time}&nbsp;{cook.unit}\n                    </p>\n                    <p>\n                        <label>Total&nbsp;Time:&nbsp;</label>\n                        {(prep.time + cook.time)}&nbsp;{cook.unit}</p>\n                </div>\n                <p>{description}</p>\n            </RecipeDetailsMiddle>\n\n            <RecipeDetailsBottom>\n                {categories &&\n                    <List\n                        type=\"ul\"\n                        heading=\"Categories\"\n                        listStyle={{ listStyleType: \"none\", padding: \"0\", margin: \"0 0 5px 0\" }}\n                        direction=\"horizontal\"\n                        listItems={categories}\n                        renderItem={(category) => <Badge className=\"m-1\">{category.name}</Badge>}\n                    />\n                }   \n\n                <List\n                    type=\"ul\"\n                    heading=\"Ingredients\"\n                    listItems={ingredients}\n                    renderItem={(ingredient) => `${ingredient.quantity ? ingredient.quantity : \"\"} ${ingredient.unit ? ingredient.unit : \"\"} ${ingredient.name}${(ingredient.size ? \", \" + ingredient.size : \"\")} ${ingredient.comment ? \"(\" + ingredient.comment + \")\" : \"\"}`}\n                />\n\n                <List\n                    type=\"ol\"\n                    heading=\"Instructions\"\n                    listItems={instructions}\n                />\n\n                {comments &&\n                    <List\n                        heading=\"Additional Comments\"\n                        listItems={comments}\n                    />\n                }\n            </RecipeDetailsBottom>\n        </StyledRecipeDetails>\n    )\n}\n\nconst StyledRecipeDetails = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 1rem auto;\n`\n\nconst RecipeDetailsTop = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n\n    > div {\n        display: flex;\n        flex-direction: row;\n        justify-content: flex-end; \n        align-items: flex-start;\n        margin-right: 1rem;\n        gap: 1rem;\n\n        > svg {\n            min-height: 1.5rem;\n            min-width: 1.5rem;\n        }\n\n        > svg:hover {\n            cursor: pointer;\n        }\n    }\n\n    > div:first-child {\n        > svg {\n            color: var(--color-red);\n        }\n    }\n    \n    @media (min-width: 428px) {\n        > div:first-child {\n            flex: 0.8;\n        }   \n    }\n`\n\nconst RecipeDetailsMiddle = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    flex-wrap: wrap;\n\n    > img {\n        width: 100%;\n        min-height: 150px;\n        max-height: 12rem;\n        aspect-ratio: 1 / 1;\n        object-fit: cover;\n        object-position: center;\n        border-radius: 5px;\n        margin: 0.25rem;\n        border: 2px solid var(--color-red);\n    }\n\n    > div {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-evenly;\n        flex-wrap: wrap;\n        width: 100%;\n        \n        > p {\n            flex: 1;\n            margin: 0.25rem;\n            padding: 0.125rem;\n            border: 2px solid var(--color-red);\n            border-radius: 5px;\n            font-weight: 200;\n            background-color: var(--color-white);\n\n            > label {\n                font-weight: 400;\n                display: inline;\n            }\n        }\n    }\n\n    > p {\n        text-align: left;\n        padding: 0.5rem;\n        order: 3;\n    }\n`\nconst RecipeDetailsBottom = styled.div`\n\n`","import React from 'react';\nimport { Navigate, useParams } from 'react-router';\nimport Page from '../Page/Page';\nimport RecipeDetails from '../../components/app/RecipeDetails/RecipeDetails';\nimport { useRecipeContext } from '../../contexts/RecipeContext/RecipeContext';\n\nexport default function RecipePage(props) {\n    const { data: recipes, updateRecipe, deleteRecipe, loading, error } = useRecipeContext();\n    const { recipeId } = useParams();\n\n    const recipe = recipes && recipes?.find(rec => rec.id === Number(recipeId));\n\n    const handleFavorite = (recipeId, isFavorite) => {\n        updateRecipe(recipeId, { favorite: !isFavorite });\n    }\n\n    const handleDelete = (recipeId, callback) => {\n        deleteRecipe(recipeId, callback);\n    }\n\n    if(!recipe) {\n        return <Navigate replace to=\"/\" />\n    }\n\n    return (\n        <Page>\n            {loading && <div>Loading...</div>}\n            {error && <pre>{JSON.stringify(error, null, 2)}</pre>}\n            {!loading && !error && <RecipeDetails recipe={recipe} onFavorite={handleFavorite} onDelete={handleDelete} />}\n        </Page>\n    )\n}","import styled from 'styled-components';\nimport { useNavigate } from 'react-router';\nimport { Save, XSquare } from 'react-bootstrap-icons';\n\nimport { Formik, Form, Field } from 'formik';\nimport { SelectInput, InputList, IngredientInput, TextareaListInput, CategoryInput } from '../../input';\n\nexport default function EditRecipeForm({ recipe, onEdit }) {\n    const navigate = useNavigate();\n    const { id, favorite, ...initialValues } = recipe;\n\n    const handleCancel = () => {\n        navigate(-1);\n    }\n\n    const handleSubmit = (values) => {\n        //Convert ingredients array to object before submitting\n        //TODO: This would best be done within context to keep business logic seperate from components.\n        //however we need initial values for ingredients and categories to determine if any have been removed\n        const ingredientsObject = {};\n        const categoriesObject = {};\n\n        //Look thru initialValues.ingredients to determine which ingredients have been removed\n        for (let ingredient of initialValues.ingredients) {\n            //If ingredient is removed set to null\n            if (values.ingredients.findIndex(ing => ing.id === ingredient.id) === -1) {\n                ingredientsObject[ingredient.name] = null;\n            }\n        }\n\n        for (let ingredient of values.ingredients) {\n            if (ingredient.id) delete ingredient.id;\n            const { name, ...ingredientValues } = ingredient;\n            ingredientsObject[name] = ingredientValues;\n        }\n\n        //Look thru initialValues.categories to determine which categories have been removed\n        for (let category of initialValues.categories) {\n            //If category is removed set to null\n            if (values.categories.findIndex(cat => cat.name === category.name) === -1) {\n                categoriesObject[category.name] = null;\n            }\n        }\n\n        for (let category of values.categories) {\n            if (category.id) delete category.id;\n            const { name, type } = category;\n            categoriesObject[name] = { type };\n        }\n\n        onEdit(id, { ...values, ingredients: ingredientsObject, categories: categoriesObject }, () => navigate(-1));\n    }\n\n    return (\n        <Formik\n            initialValues={initialValues}\n            onSubmit={handleSubmit}\n        >\n            {({ isSubmitting, values, handleSubmit }) => (\n                <StyledEditRecipeForm>\n                    <EditRecipeFormTop>\n                        <div>\n                            <Field name=\"title\" placeholder=\"Recipe Title\" type=\"input\" />\n                        </div>\n                        <div>\n                            <Save onClick={isSubmitting ? null : handleSubmit} />\n                            <XSquare onClick={handleCancel} />\n                        </div>\n                    </EditRecipeFormTop>\n\n                    <EditRecipeFormMiddle>\n                        <img src={values.photo.path ? `/${values.photo.path}` : \"\"} alt=\"\" />\n                        <div>\n                            <p>\n                                <label>Serves:&nbsp;</label>\n                                <Field name=\"serves\" placeholder=\"Serves\" type=\"number\" min={1} />\n                            </p>\n                            <p>\n                                <label>Prep&nbsp;Time:&nbsp;</label>\n                                <Field name=\"prep.time\" type=\"number\" min={1} />\n                                <Field name=\"prep.unit\" as={SelectInput} options={['min', 'hr']} variant=\"secondary\" />\n                            </p>\n                            <p>\n                                <label>Cook&nbsp;Time:&nbsp;</label>\n                                <Field name=\"cook.time\" type=\"number\" min={1} />\n                                <Field name=\"cook.unit\" as={SelectInput} options={['min', 'hr']} variant=\"secondary\" />\n                            </p>\n                            <p>\n                                <label>Total&nbsp;Time:&nbsp;</label>\n                                {(values.prep.time + values.cook.time)}&nbsp;{values.cook.unit}</p>\n                        </div>\n                        <Field name=\"description\" placeholder=\"Recipe Description\" as=\"textarea\" rows=\"4\" />\n                    </EditRecipeFormMiddle>\n\n                    <EditRecipeFormBottom>\n                        <InputList\n                            name=\"categories\" label=\"Categories\"\n                            listItems={values.categories}\n                            initialItemValue={{ name: \"\", type: \"\" }}\n                            renderItem={(item, index, arrayHelpers) => <CategoryInput key={`category-${index}`} item={item} index={index} arrayHelpers={arrayHelpers} />}\n                        />\n\n                        <InputList\n                            name=\"ingredients\" label=\"Ingredients\"\n                            listItems={values.ingredients}\n                            initialItemValue={{ name: \"\", quantity: \"\", unit: \"\", size: \"\", comment: \"\" }}\n                            renderItem={(item, index, arrayHelpers) => <IngredientInput key={`ingredient-${index}`} item={item} index={index} arrayHelpers={arrayHelpers} />}\n                        />\n\n                        <InputList\n                            name=\"instructions\" label=\"Instructions\"\n                            listItems={values.instructions}\n                            initialItemValue=\"\"\n                            renderItem={(item, index, arrayHelpers) => (\n                                <TextareaListInput\n                                    key={`instruction-${index}`}\n                                    name=\"instructions\"\n                                    placeholder=\"Instruction\"\n                                    item={item} index={index} arrayHelpers={arrayHelpers}\n                                />\n                            )}\n                        />\n\n                        <InputList\n                            name=\"comments\" label=\"Comments\"\n                            listItems={values.comments || []}\n                            initialItemValue=\"\"\n                            renderItem={(item, index, arrayHelpers) => (\n                                <TextareaListInput\n                                    key={`comment-${index}`}\n                                    name=\"comments\"\n                                    placeholder=\"Comment\"\n                                    item={item} index={index} arrayHelpers={arrayHelpers}\n                                />\n                            )}\n                        />\n                    </EditRecipeFormBottom>\n                </StyledEditRecipeForm>\n            )}\n        </Formik>\n    )\n}\n\nconst StyledEditRecipeForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    margin: 1rem auto;\n`\n\nconst EditRecipeFormTop = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n\n    > div {\n        display: flex;\n        flex-direction: row;\n        justify-content: flex-end; \n        align-items: flex-start;\n        margin-right: 1rem;\n        gap: 1rem;\n\n        > input {\n            width: 100%;\n        }\n\n        > svg {\n            min-height: 1.5rem;\n            min-width: 1.5rem;\n        }\n\n        > svg:hover {\n            cursor: pointer;\n        }\n\n        > svg:first-child {\n            color: green;\n        }\n\n        > svg:last-child {\n            color: var(--color-red);\n        }\n    }\n    \n    @media (min-width: 428px) {\n        > div:first-child {\n            flex: 0.7;\n        }   \n    }\n`\n\nconst EditRecipeFormMiddle = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    flex-wrap: wrap;\n\n    input, select {\n        width: 80%;\n    }\n\n    textarea {\n        width: 95%;\n        margin: 0.25rem auto;\n    }\n\n    > img {\n        width: 100%;\n        min-height: 150px;\n        max-height: 12rem;\n        aspect-ratio: 1 / 1;\n        object-fit: cover;\n        object-position: center;\n        border-radius: 5px;\n        margin: 0.25rem;\n        border: 2px solid var(--color-red);\n    }\n\n    > div {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-evenly;\n        flex-wrap: wrap;\n        width: 100%;\n        \n        > p {\n            flex: 1;\n            margin: 0.25rem;\n            padding: 0.25rem 0;\n            border: 2px solid var(--color-red);\n            border-radius: 5px;\n            font-weight: 200;\n            background-color: var(--color-white);\n\n            > label {\n                font-weight: 400;\n                display: inline;\n            }\n        }\n    }\n`\nconst EditRecipeFormBottom = styled.div`\n\n`","import React from 'react';\nimport { Navigate, useParams } from 'react-router';\nimport Page from '../Page/Page';\nimport EditRecipeForm from '../../components/form/EditRecipeForm/EditRecipeForm';\nimport { useRecipeContext } from '../../contexts/RecipeContext/RecipeContext';\n\nexport default function EditRecipePage(props) {\n    const { data: recipes, updateRecipe, loading, error } = useRecipeContext();\n    const { recipeId } = useParams();\n\n    const recipe = recipes && recipes?.find(rec => rec.id === Number(recipeId));\n\n    const handleEdit = (recipeId, newValues, callback) => {\n        updateRecipe(recipeId, newValues, callback);\n    }\n\n    if(!recipe) {\n        return <Navigate replace to=\"/\" />\n    }\n\n    return (\n        <Page>\n            {loading && <div>Loading...</div>}\n            {error && <pre>{JSON.stringify(error, null, 2)}</pre>}\n            {!loading && !error && <EditRecipeForm recipe={recipe} onEdit={handleEdit} />}\n        </Page>\n    )\n}","import { Formik, Field, Form } from 'formik';\nimport { Button } from 'react-bootstrap';\nimport * as Inputs from '../../input';\n\nfunction LoginForm({ onSubmit, ...props }) {\n    return (\n        <Formik\n            initialValues={{ userName: \"\", password: \"\" }}\n            onSubmit={(values, { setSubmitting }) => {\n                setSubmitting(true);\n                onSubmit(values, () => setSubmitting(false));\n            }}\n        >\n            {({ isSubmitting }) => (\n                <Form>\n                    <Inputs.InputContainer name=\"userName\" label=\"Username\">\n                        <Field name=\"userName\" type=\"input\" placeholder=\"Enter your username\" />\n                    </Inputs.InputContainer>\n\n                    <Inputs.InputContainer name=\"password\" label=\"Password\">\n                        <Field name=\"password\" type=\"password\" placeholder=\"Enter your password\" autoComplete=\"off\"/>\n                    </Inputs.InputContainer>\n\n                    {props.error && <div className=\"form-error\">{props.error}</div>}\n\n                    <Button type=\"submit\" variant=\"secondary\" disabled={isSubmitting}>\n                        Submit\n                    </Button>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default LoginForm;","import styled from 'styled-components';\nimport { Navigate } from 'react-router-dom';\n\nimport Page from '../Page/Page';\nimport LoginForm from '../../components/form/LoginForm/LoginForm';\nimport { useAuth } from '../../contexts/AuthContext/AuthContext';\n\nexport default function LoginPage(props) {\n    const auth = useAuth();\n    \n    const handleLogin = async (credentials, callback) => {\n        await auth.login(credentials);\n        callback();\n    }\n\n    if(!auth.loading && auth.user) return <Navigate to=\"/\" />\n\n    return (\n        <LoginPageContainer>\n            <h1>Log In</h1>\n            <LoginForm onSubmit={handleLogin} error={auth.error?.response?.data}/>\n        </LoginPageContainer>\n    )\n}\n\nconst LoginPageContainer = styled(Page)`\n    padding: 2rem;\n    > h1 {\n        margin-top: 4rem;\n    }\n`","import { useState, useEffect, useRef } from 'react';\nimport { Button, Form, FormControl } from 'react-bootstrap';\nimport { Search as SearchIcon } from 'react-bootstrap-icons';\nimport styled from 'styled-components';\n\nfunction Search({ onSubmit, initialValue }) {\n    const inputRef = useRef(null);\n    const [showClearBtn, setShowClearBtn] = useState(initialValue && initialValue.length > 0);\n\n    useEffect(() => {\n        inputRef.current.value = initialValue;\n    }, [initialValue]);\n\n    const handleKeyPress = (e) => {\n        if(e.key === \"Enter\") {\n            e.preventDefault();\n            inputRef.current.blur();\n            typeof onSubmit === \"function\" && onSubmit(inputRef.current.value);\n        }\n    }\n\n    const handleInputChange = (e) => {\n        if(e.target.value.length > 0) setShowClearBtn(true);\n        else setShowClearBtn(false);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        typeof onSubmit === \"function\" && onSubmit(inputRef.current.value);\n    }\n\n    const handleClear = () => {\n        inputRef.current.value = \"\";\n        setShowClearBtn(false);\n        typeof onSubmit === \"function\" && onSubmit(\"\");\n    }\n\n    return (\n        <StyledSearch onSubmit={handleSubmit}>\n            <FormControl\n                type=\"search\"\n                placeholder=\"Search\"\n                aria-label=\"Search\"\n                className=\"search-bar\"\n                onKeyPress={handleKeyPress}\n                onChange={handleInputChange}\n                ref={inputRef}\n            />\n            <Button className={`clear-btn ${showClearBtn ? \"show\" : \"\"}`} variant=\"outline-secondary\" onClick={handleClear}>x</Button>\n            <Button variant=\"secondary\" type=\"submit\" className=\"ms-2\"><SearchIcon width={10} height={10} /></Button>\n        </StyledSearch>\n    )\n}\n\nconst StyledSearch = styled(Form)`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    justify-content: right;\n\n    .search-bar {\n        max-width: 300px;   \n    }\n\n    .clear-btn {\n        display: none;\n        background: white;\n    }\n\n    .clear-btn.show {\n        display: inline;\n    }\n\n`\n\nexport default Search;","import Nav from 'react-bootstrap/Nav';\nimport { Link, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport default function NavIconLink({ to, text = \"\", IconComponent, IconFillComponent, textOnHover=false, ...props }) {\n    const { pathname } = useLocation();\n\n    return (\n        <StyledNavIconLink as={Link} to={to} textOnHover={textOnHover} {...props}>\n            {pathname === to ?\n                <IconFillComponent size={25} /> :\n                <IconComponent size={25} />\n            }\n            <span className=\"text\">\n                {text}\n            </span>\n        </StyledNavIconLink>\n    );\n}\n\nconst StyledNavIconLink = styled(Nav.Item)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    scroll-snap-align: start;\n    min-width: 25%;\n    color: #5c636a;\n    text-decoration: none;\n\n    .text {\n        opacity: ${props => props.textOnHover ? 0 : 1};\n        white-space: normal;\n        width: 75%;\n    }\n\n    :hover {\n        color: #5c636a;\n        cursor: pointer;\n\n        .text {\n            opacity: 1;\n        }\n    }\n\n    @media (min-width: 428px) {\n        min-width: 20%;\n    }\n\n    @media (min-width: 768px) {\n        min-width: 15%;\n    }\n`","import {\n    House, HouseFill,\n    PlusCircle, PlusCircleFill,\n    Heart, HeartFill,\n    Gear, GearFill,\n    Calendar3, Calendar3Fill,\n    Bag, BagFill,\n} from 'react-bootstrap-icons';\nimport NavIconLink from '../../display/NavIconLink/NavIconLink';\nimport styled from 'styled-components';\n\nexport default function NavLinks({ className, textOnHover, ...props }) {\n    return (\n        <StyledNavLinks className={className || \"\"} {...props}>\n            <NavIconLink to=\"/\" text=\"Home\" IconComponent={House} IconFillComponent={HouseFill} textOnHover={textOnHover} />\n            <NavIconLink to=\"/favorites\" text=\"Favorites\" IconComponent={Heart} IconFillComponent={HeartFill} textOnHover={textOnHover} />\n            <NavIconLink to=\"/new\" text=\"New\" IconComponent={PlusCircle} IconFillComponent={PlusCircleFill} textOnHover={textOnHover} />\n            <NavIconLink to=\"/grocery\" text=\"Grocery\" IconComponent={Bag} IconFillComponent={BagFill} textOnHover={textOnHover} />\n            <NavIconLink to=\"/planner\" text=\"Planner\" IconComponent={Calendar3} IconFillComponent={Calendar3Fill} textOnHover={textOnHover} />\n            <NavIconLink to=\"/settings\" text=\"Settings\" IconComponent={Gear} IconFillComponent={GearFill} textOnHover={textOnHover} />\n        </StyledNavLinks>\n    )\n}\n\nconst StyledNavLinks = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    justify-content: flex-start;\n    overflow-x: auto;\n    white-space: nowrap;\n    scroll-snap-type: x mandatory;\n    min-width:  ${props => props.minWidth || '100%'};\n    max-width: ${props => props.maxWidth || '100%'};\n\n    -ms-overflow-style: none;  /* Hide scrollbar for IE and Edge */\n    scrollbar-width: none;  /* Hide scrollbar for Firefox */\n     /* Hide scrollbar for Chrome, Safari and Opera */\n    ::-webkit-scrollbar {\n        display: none;\n    }\n\n    @media (min-width: 768px) {\n        justify-content: space-around;   \n    }\n`","import styled from 'styled-components';\nimport { Button, Navbar, Nav } from 'react-bootstrap';\nimport { useLocation, useNavigate } from 'react-router';\nimport { useAuth } from '../../../contexts/AuthContext/AuthContext';\nimport { useRecipeContext } from '../../../contexts/RecipeContext/RecipeContext';\nimport Search from '../../input/Search/Search';\nimport NavLinks from '../NavLinks/NavLinks';\n\nexport default function TopNav({ onShowFilter }) {\n    const { filter, updateFilter } = useRecipeContext();\n    const { pathname } = useLocation();\n    const navigate = useNavigate();\n    const auth = useAuth();\n\n    if (!auth.user) return null;\n\n    return (\n        <StyledTopNav sticky=\"top\">\n            <Nav>\n                <Nav.Item className=\"back-btn\">\n                    <Button\n                        variant=\"outline-secondary\"\n                        onClick={() => navigate(-1)}\n                    >\n                        Back\n                    </Button>\n                </Nav.Item>\n\n                <NavLinks className=\"largeScreenOnly\" minWidth=\"50vw\" maxWidth=\"60vw\" textOnHover={true} />\n\n                <Nav.Item>\n                    <Button\n                        variant=\"secondary\"\n                        className=\"show-filters-btn\"\n                        onClick={onShowFilter}\n                    >\n                        Filters\n                    </Button>\n                </Nav.Item>\n\n                <Nav.Item className=\"nav-search\">\n                    <Search\n                        onSubmit={(value) => updateFilter({ search: value })}\n                        initialValue={filter.search}\n                    />\n                </Nav.Item>\n            </Nav>\n        </StyledTopNav>\n    )\n}\n\nconst StyledTopNav = styled(Navbar)`\n    padding: 0.5rem;\n    background: var(--color-red);\n    border-bottom: 1px solid #5c636a;\n\n    .navbar-nav {\n        display: flex;\n        flex-direction: row;\n        flex-wrap: wrap;\n        justify-content: space-between;\n        width: 100%;\n    }\n    \n    .nav-search {\n        flex-basis: 100%;\n        padding-top: 0.25rem;\n    }\n    \n    .largeScreenOnly {\n        display: none;\n    }\n\n    @media (min-width: 1024px) {\n        .largeScreenOnly {\n            display: flex;\n        }\n    }\n`","import styled from 'styled-components';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavLinks from '../NavLinks/NavLinks';\nimport { useAuth } from '../../../contexts/AuthContext/AuthContext';\n\n\nexport default function BottomNav(props) {\n    const auth = useAuth();\n\n    if(!auth.user) return null;\n\n    return (\n        <StyledBottomNav fixed=\"bottom\">\n            <NavLinks />\n        </StyledBottomNav>\n    )\n}\n\nconst StyledBottomNav = styled(Navbar)`\n    background-color: var(--color-red);\n    border-top: 1px solid #5c636a;\n\n    @media (min-width: 1024px) {\n        display: none;\n    }\n\n`","import React from 'react';\nimport { Offcanvas } from 'react-bootstrap';\n\nfunction SlideinSidebar(props) {\n    return (\n        <Offcanvas show={props.show} onHide={props.onClose} {...props}>\n          <Offcanvas.Header closeButton>\n            <Offcanvas.Title>{props.title}</Offcanvas.Title>\n          </Offcanvas.Header>\n          <Offcanvas.Body>\n            {props.children}\n          </Offcanvas.Body>\n        </Offcanvas>\n    );\n  }\n\n  export default SlideinSidebar;","import React, { useState } from 'react';\nimport { FormControl } from 'react-bootstrap';\nimport './Autocomplete.css';\n\nfunction Autocomplete({ suggestions, placeholder, onSubmit }) {\n    const [userInput, setUserInput] = useState(\"\");\n    const [filteredSuggestions, setFilteredSuggestions] = useState([]);\n    const [activeSuggestion, setActiveSuggestion] = useState(-1);\n    const [showSuggestions, setShowSuggestions] = useState(false);\n\n    // useEffect(() => {\n    //     console.group(\"Autocomplete State and Props\");\n    //     console.log(\"User input:\", userInput);\n    //     console.log(\"Filtered suggestions:\", filteredSuggestions);\n    //     console.log(\"Active suggestion:\", activeSuggestion);\n    //     console.log(\"Show:\", showSuggestions);\n    //     console.log(\"Suggestions:\", suggestions);\n    //     console.groupEnd();\n    // }, [userInput, filteredSuggestions, activeSuggestion, showSuggestions, suggestions]);\n\n    const handleSubmit = (submitValue) => {\n        if(!onSubmit) return;\n        if(submitValue) {\n            onSubmit(submitValue);\n        } else {\n            const suggIdx = filteredSuggestions.findIndex(item => item.name.toLowerCase() === userInput.toLowerCase());\n            if(suggIdx > -1) onSubmit(filteredSuggestions[suggIdx]);\n        }\n    }\n\n    const handleChange = e => {\n        const input = e.currentTarget.value;\n\n        const newFilteredSuggestions = suggestions.filter(suggestion =>\n            suggestion.name.toLowerCase().indexOf(input.toLowerCase()) > -1\n        );\n\n        setActiveSuggestion(-1);\n        setFilteredSuggestions(newFilteredSuggestions);\n        \n        //Show suggestions if input has not changed to empty string\n        if(input !== \"\" ) setShowSuggestions(true);\n        else setShowSuggestions(false);\n\n        setUserInput(input);\n    };\n\n    const handleKeyDown = e => {\n        const keyCode = e.keyCode;\n\n        if (keyCode === 13) {\n            e.preventDefault();\n            if(activeSuggestion === -1 && userInput === \"\") return;\n            if(activeSuggestion > -1) {\n                handleSubmit(filteredSuggestions[activeSuggestion])\n            } else handleSubmit();\n            setActiveSuggestion(-1);\n            setShowSuggestions(false);\n            setUserInput(\"\");\n        } else if (keyCode === 38) {\n            if (activeSuggestion === 0 || !showSuggestions) return;\n            setActiveSuggestion(prevActiveSuggestion => prevActiveSuggestion - 1);\n        } else if (keyCode === 40) {\n            if (activeSuggestion + 1 === filteredSuggestions.length || !showSuggestions) return;\n            setActiveSuggestion(prevActiveSuggestion => prevActiveSuggestion + 1);\n        }\n    };\n\n    const handleClick = e => {\n        const clickedSuggestion = { id: e.currentTarget.value, name: e.currentTarget.innerText };\n        setActiveSuggestion(-1);\n        setFilteredSuggestions([]);\n        setShowSuggestions(false);\n        setUserInput(\"\");\n        handleSubmit(clickedSuggestion);\n    };\n\n    const suggestionsListComponent = (showSuggestions && userInput !== \"\") ?\n        ((filteredSuggestions.length) ? (\n            <ul className=\"suggestions-list\">\n                {filteredSuggestions.map((suggestion, index) => {\n                    let className;\n\n                    // Flag the active suggestion with a class\n                    if (index === activeSuggestion) {\n                        className = \"suggestion-active\";\n                    }\n                    return (\n                        <li className={className} key={suggestion.id} value={suggestion.id} onClick={handleClick}>\n                            {suggestion.name}\n                        </li>\n                    );\n                })}\n            </ul>\n        ) : (\n            <div className=\"no-suggestions\">\n                <em>No suggestions available.</em>\n            </div>\n        )\n        ) : null\n\n    return (\n        <div className=\"autocomplete-container\">\n            <FormControl\n                className=\"autocomplete-input-bar\"\n                type=\"search\"\n                onChange={handleChange}\n                onKeyDown={handleKeyDown}\n                value={userInput}\n                placeholder={placeholder}\n            />\n            {suggestionsListComponent}\n        </div>\n    );\n}\n\nexport default Autocomplete;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { FieldArray } from 'formik';\nimport { Trash } from 'react-bootstrap-icons';\nimport Autocomplete from '../Autocomplete/Autocomplete';\nimport './AutocompleteList.css';\n\nfunction AutocompleteList({ name, listItems, suggestions, placeholder, onChange }) {\n    const handleSubmit = (values) => {\n        onChange && onChange(values);\n    }\n\n    return (\n        <>\n            <Autocomplete\n                suggestions={suggestions}\n                placeholder={placeholder}\n                onSubmit={handleSubmit}\n            />\n            <FieldArray\n                name={name}\n                render={arrayHelpers => (\n                    <ul className=\"autocomplete-list\">\n                        {listItems.map((item, index) => (\n                            <Row as=\"li\" key={index}>\n                                <Col xs={1}>\n                                    <Trash\n                                        onClick={() => {\n                                            arrayHelpers.remove(index)\n                                        }} \n                                    />\n                                </Col>\n                                <Col>\n                                    {item.name}\n                                </Col>\n                            </Row>\n                        ))}\n                    </ul>\n                )}\n            />\n        </>\n    )\n}\n\nexport default AutocompleteList;","import React from 'react';\nimport { Row, Button } from 'react-bootstrap';\nimport { Formik, Form } from 'formik';\n\nimport AutocompleteList from '../../input/AutocompleteList/AutocompleteList';\nimport './FilterRecipesForm.css';\n\nfunction FilterRecipesForm({ initialFilter, onSubmit, ingredients, categories }) {\n    const handleClearFilters = () => {\n        onSubmit({\n            ingredients: [],\n            categories: []\n        });\n    }\n\n    return (\n        <Formik\n            initialValues={initialFilter}\n            onSubmit={(values) => {\n                onSubmit({\n                    ingredients: values.ingredients,\n                    categories: values.categories\n                });\n            }}\n        >\n            {(form) => (\n                <Form className=\"filter-recipes-form\">\n                    <Row>\n                        <h5>Ingredients</h5>\n                        <AutocompleteList\n                            name=\"ingredients\"\n                            placeholder={\"Enter an ingredient to add to list\"}\n                            suggestions={ingredients}\n                            listItems={form.values.ingredients}\n                            onChange={(value) => {\n                                form.setFieldValue('ingredients', [...form.values.ingredients, value]);\n                            }}\n                        />\n                    </Row>\n\n                    <Row>\n                        <h5>Categories</h5>\n                        <AutocompleteList\n                            name=\"categories\"\n                            placeholder={\"Enter a category to add to list\"}\n                            suggestions={categories}\n                            listItems={form.values.categories}\n                            onChange={(value) => {\n                                form.setFieldValue('categories', [...form.values.categories, value]);\n                            }}\n                        />\n                    </Row>\n\n                    <Row>\n                        <Button variant=\"outline-secondary\" className=\"clear-filters-btn\" onClick={handleClearFilters}>Clear</Button>\n                        <Button variant=\"secondary\" className=\"apply-filters-btn\" type=\"submit\">Apply</Button>\n                    </Row>\n\n                </Form>\n            )}\n        </Formik>\n    )\n\n}\n\nexport default FilterRecipesForm;","import React from 'react';\nimport { useRecipeContext } from '../../../contexts/RecipeContext/RecipeContext';\nimport useResource from '../../../hooks/useResource';\n\nimport SlideinSidebar from '../../display/SlideinSidebar/SlideinSidebar';\nimport FilterRecipesForm from '../../form/FilterRecipesForm/FilterRecipesForm';\n\nfunction FilterControlSidebar({ show, onClose }) {\n    const { filter, updateFilter } = useRecipeContext();\n    const { value: ingredients} = useResource('/api/ingredients');\n    const { value: categories} = useResource('/api/categories');\n\n    const handleApplyFilter = (filter) => {\n        updateFilter(filter);\n        onClose();\n    }\n\n    return (\n        <SlideinSidebar show={show} onClose={onClose} title=\"Select your filters\">\n            <FilterRecipesForm\n                initialFilter={filter}\n                onSubmit={handleApplyFilter}\n                ingredients={ingredients}\n                categories={categories}\n            />\n        </SlideinSidebar>\n    )\n}\n\nexport default FilterControlSidebar;","import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { useDialogContext } from '../../../contexts/DialogContext/DialogContext';\n\nexport default function Dialog(props) {\n    const { dialog, show, setShow } = useDialogContext();\n\n    return (\n        <Modal show={show} onHide={() => setShow(false)}>\n            <Modal.Header closeButton>\n                <Modal.Title>{dialog.title}</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                <p>{dialog.text}</p>\n                {dialog.body}\n            </Modal.Body>\n\n            <Modal.Footer>\n                {dialog.footer}\n            </Modal.Footer>\n        </Modal>\n    )\n}","import styled from 'styled-components';\nimport Page from '../Page/Page';\n\nfunction GroceryListPage() {\n  return (\n    <Page>\n        <h1>Grocery List</h1>\n    </Page>\n  )\n}\n\nexport default GroceryListPage","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport useToggle from './hooks/useToggle';\nimport HomePage from './pages/HomePage/HomePage';\nimport FavoritesPage from './pages/FavoritesPage/FavoritesPage';\nimport NewRecipePage from './pages/NewRecipePage/NewRecipePage';\nimport SettingsPage from './pages/SettingsPage/SettingsPage';\nimport RecipePage from './pages/RecipePage/RecipePage';\nimport EditRecipePage from './pages/EditRecipePage/EditRecipePage';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport TopNav from './components/app/TopNav/TopNav';\nimport BottomNav from './components/app/BottomNav/BottomNav';\nimport FilterControlSidebar from './components/app/FilterControlSidebar/FilterControlSidebar';\nimport Dialog from './components/display/Dialog/Dialog';\n\nimport DialogContextProvider from './contexts/DialogContext/DialogContext';\nimport RecipeContextProvider from './contexts/RecipeContext/RecipeContext';\nimport AuthContextProvider, { useAuth } from './contexts/AuthContext/AuthContext';\n\nimport './App.css';\nimport GroceryListPage from './pages/GroceryListPage/GroceryListPage';\n\nfunction PrivateRoute({ children }) {\n\tconst auth = useAuth();\n\n\tif (auth.loading) return <div>Loading...</div>\n\n\treturn (\n\t\tauth.user ? children : <Navigate to=\"/login\" />\n\t)\n}\n\nfunction App() {\n\tconst [isShown, toggleShow] = useToggle(false);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<AuthContextProvider>\n\t\t\t\t<DialogContextProvider>\n\t\t\t\t\t<RecipeContextProvider>\n\t\t\t\t\t\t<FilterControlSidebar\n\t\t\t\t\t\t\tshow={isShown}\n\t\t\t\t\t\t\tonClose={() => toggleShow(false)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Dialog />\n\t\t\t\t\t\t<Router>\n\t\t\t\t\t\t\t<TopNav onShowFilter={() => toggleShow(true)} />\n\n\t\t\t\t\t\t\t<Routes>\n\t\t\t\t\t\t\t\t<Route path=\"/login\" element={<LoginPage />} />\n\t\t\t\t\t\t\t\t<Route path=\"/\" element={<PrivateRoute><HomePage /></PrivateRoute>} />\n\t\t\t\t\t\t\t\t<Route path=\"/favorites\" element={<PrivateRoute><FavoritesPage /></PrivateRoute>} />\n\t\t\t\t\t\t\t\t<Route path=\"/new\" element={<PrivateRoute><NewRecipePage /></PrivateRoute>} />\n\t\t\t\t\t\t\t\t<Route path=\"/settings\" element={<PrivateRoute><SettingsPage /></PrivateRoute>} />\n\t\t\t\t\t\t\t\t<Route path=\"/grocery\" element={<PrivateRoute><GroceryListPage /></PrivateRoute>} />\n\t\t\t\t\t\t\t\t<Route path=\"/recipe/:recipeId\" element={<PrivateRoute><RecipePage /></PrivateRoute>} />\n\t\t\t\t\t\t\t\t<Route path=\"/recipe/:recipeId/edit\" element={<PrivateRoute><EditRecipePage /></PrivateRoute>} />\n\t\t\t\t\t\t\t</Routes>\n\n\t\t\t\t\t\t\t<BottomNav />\n\t\t\t\t\t\t</Router>\n\t\t\t\t\t</RecipeContextProvider>\n\t\t\t\t</DialogContextProvider>\n\t\t\t</AuthContextProvider>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { useState } from \"react\"\n\nexport default function useToggle(defaultValue) {\n  const [value, setValue] = useState(defaultValue)\n\n  function toggleValue(value) {\n    setValue(currentValue =>\n      typeof value === \"boolean\" ? value : !currentValue\n    )\n  }\n\n  return [value, toggleValue]\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}