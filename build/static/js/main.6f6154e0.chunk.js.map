{"version":3,"sources":["pages/Page/Page.js","components/app/RecipeCard/RecipeCard.js","hooks/useAsync.js","hooks/useResource.js","api/recipes.js","api/auth.js","contexts/AuthContext/AuthContext.js","utility/localStorage/authStorage.js","contexts/RecipeContext/RecipeContext.js","pages/HomePage/HomePage.js","pages/FavoritesPage/FavoritesPage.js","components/input/SelectInput/SelectInput.js","components/input/IngredientInput/IngredientInput.js","components/input/TextareaListInput/TextareaListInput.js","components/input/InputContainer/InputContainer.js","components/input/InputList/InputList.js","components/display/spinners/Heart/Heart.js","utility/validationSchema/recipeSchema.js","components/form/NewRecipeForm/NewRecipeForm.js","pages/NewRecipePage/NewRecipePage.js","pages/SettingsPage/SettingsPage.js","contexts/DialogContext/DialogContext.js","components/display/List/List.js","components/app/RecipeDetails/RecipeDetails.js","pages/RecipePage/RecipePage.js","components/form/EditRecipeForm/EditRecipeForm.js","pages/EditRecipePage/EditRecipePage.js","components/form/LoginForm/LoginForm.js","pages/LoginPage/LoginPage.js","hooks/useMediaQuery.js","hooks/useEventListener.js","components/input/Search/Search.js","components/display/NavIconLink/NavIconLink.js","components/app/NavLinks/NavLinks.js","components/app/TopNav/TopNav.js","components/app/BottomNav/BottomNav.js","components/display/SlideinSidebar/SlideinSidebar.js","components/input/Autocomplete/Autocomplete.js","components/input/AutocompleteList/AutocompleteList.js","components/form/FilterRecipesForm/FilterRecipesForm.js","components/app/FilterControlSidebar/FilterControlSidebar.js","components/display/Dialog/Dialog.js","App.js","hooks/useToggle.js","reportWebVitals.js","index.js"],"names":["Page","children","className","props","Container","fluid","RecipeCard","navigate","useNavigate","title","description","serves","prep","cook","favorite","id","photo","handleFavoriteClick","e","stopPropagation","onFavorite","Card","Body","onClick","Row","Col","Title","Subtitle","time","unit","Text","Img","src","path","alt","useAsync","callback","dependencies","useState","loading","setLoading","error","setError","value","setValue","callbackMemoized","useCallback","then","catch","finally","useEffect","DEFAULT_OPTIONS","headers","useResource","options","isProtected","token","authorization","split","undefined","axios","get","res","status","data","Promise","reject","createRecipe","recipeInfo","post","updateRecipe","recipeId","updates","patch","deleteRecipe","delete","login","credentials","authContext","createContext","useAuth","useContext","currentToken","localStorage","getItem","AuthContextProvider","a","authApi","user","setItem","Provider","logout","removeItem","recipeContext","useRecipeContext","authHeader","Authorization","RecipeContextProvider","auth","ingredients","search","filter","setFilter","recipeApi","recipe","prevValue","console","newValue","updatedIndex","findIndex","splice","deletedIndex","filteredValue","result","ingredient","ing","searchText","toLowerCase","includes","map","name","join","instructions","comments","applyFilter","updateFilter","prev","HomePage","recipes","handleFavorite","isFavorite","log","JSON","stringify","message","length","sm","md","to","FavoritesPage","favoritedRecipes","SelectInput","placeholder","Button","as","option","IngredientInput","index","arrayHelpers","xs","type","min","variant","remove","TextareaListInput","InputContainer","label","htmlFor","child","InputList","listItems","renderItem","initialItemValue","render","lg","size","push","item","Heart","recipeSchema","Yup","shape","max","required","typeError","initialValues","categories","NewRecipeForm","onSubmit","values","setSubmitting","formData","FormData","append","validationSchema","isSubmitting","setFieldValue","component","Inputs","onChange","file","target","files","amount","measurement","disabled","NewRecipePage","err","SettingsPage","dialogContext","useDialogContext","DialogContextProvider","show","setShow","text","footer","dialog","setDialog","List","heading","style","listItemComponents","direction","RecipeDetails","onDelete","RecipePage","useParams","find","rec","Number","replace","EditRecipeForm","onEdit","handleCancel","ingredientsObject","ingredientValues","ButtonGroup","EditRecipePage","newValues","LoginForm","userName","password","autoComplete","LoginPage","handleLogin","response","useMediaQuery","mediaQuery","isMatch","setIsMatch","mediaQueryList","setMediaQueryList","list","window","matchMedia","matches","eventType","element","callbackRef","useRef","current","handler","addEventListener","removeEventListener","useEventListener","Search","initialValue","inputRef","showClearBtn","setShowClearBtn","Form","preventDefault","FormControl","onKeyPress","key","blur","ref","NavIconLink","IconComponent","IconFillComponent","pathname","useLocation","Nav","Item","Link","NavLinks","House","HouseFill","HeartFill","PlusCircle","PlusCircleFill","Gear","GearFill","TopNav","onShowFilter","isLargeScreen","Navbar","sticky","BottomNav","shouldDisplay","fixed","SlideinSidebar","Offcanvas","onHide","onClose","Header","closeButton","Autocomplete","suggestions","userInput","setUserInput","filteredSuggestions","setFilteredSuggestions","activeSuggestion","setActiveSuggestion","showSuggestions","setShowSuggestions","handleSubmit","submitValue","suggIdx","handleClick","clickedSuggestion","currentTarget","innerText","suggestionsListComponent","suggestion","input","newFilteredSuggestions","indexOf","onKeyDown","keyCode","prevActiveSuggestion","AutocompleteList","FilterRecipesForm","initialFilter","handleClearFilters","form","FilterControlSidebar","Dialog","Modal","Footer","PrivateRoute","App","defaultValue","currentValue","useToggle","isShown","toggleShow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f6154e0.chunk.js","sourcesContent":["import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport './Page.css';\n\nexport default function Page({ children, className = \"\", ...props }) {\n    return (\n        <Container className={`page ${className}`} {...props} fluid >\n            { children }\n        </Container>\n    );\n}","import React from 'react';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport { Heart, HeartFill } from 'react-bootstrap-icons';\nimport { useNavigate } from 'react-router';\n\nimport './RecipeCard.css';\n\nexport default function RecipeCard(props) {\n    const navigate = useNavigate();\n    const { title, description, serves, prep, cook, favorite, id, photo } = props;\n\n    const handleFavoriteClick = (e) => {\n        e.stopPropagation();\n        props.onFavorite(id, favorite);\n    }\n\n    return (\n        <Card className=\"recipe-card\">\n            <Card.Body className=\"recipe-card-body\" onClick={() => navigate(`/recipe/${id}`)}>\n                <Row>\n                    <Col className=\"recipe-card-body-left\">\n                        <Card.Title className=\"recipe-card-title\">\n                            {title}{\" \"}\n                            <span className=\"favorite-btn\">\n                                {favorite ?\n                                    <HeartFill onClick={handleFavoriteClick} /> :\n                                    <Heart onClick={handleFavoriteClick} />\n                                }\n                            </span>\n                        </Card.Title>\n                        <Card.Subtitle className=\"mb-2 text-muted\">Serves: {serves}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\">Prep time: {prep.time + \" \" + prep.unit}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\">Cook time: {cook.time + \" \" + cook.unit}</Card.Subtitle>\n                        <Card.Text className=\"recipe-card-text\">\n                            {description}\n                        </Card.Text>\n                    </Col>\n                    <Col className=\"recipe-card-body-right\">\n                        <Card.Img className=\"recipe-card-img\" src={photo.path ? `http://localhost:3005/${photo.path}` : \"\"} alt=\"\" />\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    )\n\n}\n","import { useCallback, useEffect, useState } from \"react\";\n\nexport default function useAsync(callback, dependencies = []) {\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState()\n  const [value, setValue] = useState()\n\n  const callbackMemoized = useCallback(() => {\n    setLoading(true);\n    setError(null);\n    setValue(null);\n    callback && typeof callback === \"function\" && callback()\n      .then(setValue) \n      .catch(setError)\n      .finally(() => setLoading(false));\n  }, dependencies);\n\n  useEffect(() => {\n    callbackMemoized();\n  }, [callbackMemoized]);\n\n  return { loading, error, value, setLoading, setError, setValue }\n}","import useAsync from \"./useAsync\";\nimport axios from \"axios\";\n\nconst DEFAULT_OPTIONS = {\n    headers: { \"Content-Type\": \"application/json\" },\n}\n\nexport default function useResource(path, options = {}, isProtected = false, dependencies = []) {\n    return useAsync(() => {\n        const token = options.headers?.authorization?.split(\" \")[1];\n        if(isProtected && (token === null || token === \"null\" || token === undefined || token === \"undefined\")) {\n            return Promise.reject(\"No valid auth token\");\n        }\n        return axios.get(path, { ...DEFAULT_OPTIONS, ...options }).then(res => {\n            if(res.status === 200) return res.data;\n        })\n    }, dependencies);\n}","import axios from 'axios';\n\nfunction createRecipe(recipeInfo, headers) {\n    return axios.post(\"/api/recipes\", recipeInfo, { headers });\n}\n\nfunction updateRecipe(recipeId, updates, headers) {\n    return axios.patch(`/api/recipes/${recipeId}`, updates, { headers });\n}\n\nfunction deleteRecipe(recipeId, headers) {\n    return axios.delete(`/api/recipes/${recipeId}`, { headers });\n}\n\nexport default {\n    createRecipe, updateRecipe, deleteRecipe\n}","import axios from 'axios';\n\nfunction login(credentials) {\n    return axios.post(`/api/auth/login`, credentials);\n}\n\nexport default { login };","import React, { createContext, useContext } from 'react';\nimport useResource from '../../hooks/useResource';\nimport authApi from '../../api/auth';\nimport { getLocalAuthToken, setLocalAuthToken, removeLocalAuthToken } from '../../utility/localStorage/authStorage';\n\nexport const authContext = createContext({});\n\nexport const useAuth = () => useContext(authContext);\n\nconst currentToken = getLocalAuthToken();\n\nexport default function AuthContextProvider({ children }) {\n    const { loading, error, value, setLoading, setError, setValue } = useResource(\n        '/api/auth/login',\n        { headers: { authorization: `BEARER ${currentToken}` } },\n        true,\n        [currentToken]\n    );\n\n    const login = async (credentials) => {\n        try {\n            setLoading(true);\n            setValue(null);\n            setError(null);\n            const user = await authApi.login(credentials);\n            setValue(user.data);\n            setLocalAuthToken(user.data.token);\n        } catch(err) {\n            setError(err);\n        }\n        setLoading(false);\n    }\n\n    const logout = () => {\n        setValue(null);\n        removeLocalAuthToken();\n    }\n\n    return (\n        <authContext.Provider value={{ loading, error, user: value, login, logout }}>\n            {children}\n        </authContext.Provider>\n    )\n}","export function setLocalAuthToken(token) {\n    localStorage.setItem(\"recipe_app_0246_auth_token\", token);\n}\n\nexport function getLocalAuthToken() {\n    return localStorage.getItem(\"recipe_app_0246_auth_token\");\n}\n\nexport function removeLocalAuthToken() {\n    localStorage.removeItem(\"recipe_app_0246_auth_token\");\n}","import React, { createContext, useContext, useState } from 'react';\nimport useResource from '../../hooks/useResource';\nimport recipeApi from '../../api/recipes';\nimport { useAuth } from '../AuthContext/AuthContext';\n\nexport const recipeContext = createContext({});\n\nexport const useRecipeContext = () => useContext(recipeContext);\n\nconst authHeader = (token) => ({ Authorization: `BEARER ${token}`});\n\nexport default function RecipeContextProvider({ children }) {\n    const auth = useAuth();\n    const { loading, error, value, setValue } = useResource(\n        '/api/recipes',\n        { headers: { authorization: `BEARER ${auth.user?.token}` } },\n        true,\n        [auth.user?.token]\n    );\n    const [filter, setFilter] = useState({ ingredients: [], search: \"\" });\n\n    const applyFilter = (filter) => {\n        const { ingredients, search } = filter;\n\n        let result = value;\n\n        //Filter by ingredients, result will include recipes that have all ingredients\n        if(ingredients) {\n            for(let ingredient of ingredients) {\n                result = result?.filter(recipe => {\n                    const index = recipe.ingredients.findIndex(ing => ing.id === ingredient.id)\n                    return index > -1;\n                });\n            }\n        }\n\n        //Filter out recipes that do not contain the search text\n        if(search) {\n            const searchText = search.toLowerCase();\n            result = result?.filter(recipe => (\n                recipe.title.toLowerCase().includes(searchText)\n                || recipe.description.toLowerCase().includes(searchText)\n                || recipe.ingredients.map(ing => ing.name).join(\" \").toLowerCase().includes(searchText)\n                || recipe.instructions.join(\" \").toLowerCase().includes(searchText)\n                || recipe.comments?.join(\" \").toLowerCase().includes(searchText)\n            ));\n        }\n\n        return result;\n    }\n\n    const updateFilter = (filter) => {\n        setFilter(prev => ({ ...prev, ...filter}));\n    }\n    \n    const createRecipe = async (recipeInfo, callback = () => {}) => {\n        try {\n            //Make api call\n            const recipe = await recipeApi.createRecipe(recipeInfo, authHeader(auth.user.token));\n            //Update state with returned data\n            setValue(prevValue => ([...prevValue, recipe.data]));\n            callback(recipe.data, null);\n        } catch(err) {\n            console.error(\"Error:\", err);\n            callback(null, err);\n        }\n    }\n\n    const updateRecipe = async (recipeId, updates, callback = () => {}) => {\n        try {\n            //Make api call\n            const recipe = await recipeApi.updateRecipe(recipeId, updates, authHeader(auth.user.token));\n            //Update state with returned data\n            setValue(prevValue => {\n                const newValue = [...prevValue];\n                const updatedIndex = newValue.findIndex(value => value.id === recipe.data.id);\n                if(updatedIndex > -1) newValue.splice(updatedIndex, 1, recipe.data);\n                return newValue;\n            })\n            callback(recipe.data, null);\n        } catch(err) {\n            console.error(\"Error:\", err);\n            callback(null, err);\n        }\n    }\n\n    const deleteRecipe = async (recipeId, callback = () => {}) => {\n        try {\n            //Make api call\n            await recipeApi.deleteRecipe(recipeId, authHeader(auth.user.token));\n            //Remove recipe from state\n            setValue(prevValue => {\n                const newValue = [...prevValue];\n                const deletedIndex = newValue.findIndex(value => value.id === recipeId);\n                if(deletedIndex > -1) newValue.splice(deletedIndex, 1);\n                return newValue;\n            })\n            callback(true, null);\n        } catch(err) {\n            console.error(\"Error:\", err);\n            callback(null, err);\n        }\n    }\n\n    const filteredValue = applyFilter(filter);\n    \n    return (\n        <recipeContext.Provider value={{ loading, error, data: filteredValue, createRecipe, updateRecipe, deleteRecipe, updateFilter, filter }}>\n            {children}\n        </recipeContext.Provider>\n    )\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col } from 'react-bootstrap';\n\nimport Page from '../Page/Page';\nimport RecipeCard from '../../components/app/RecipeCard/RecipeCard';\nimport { useRecipeContext } from '../../contexts/RecipeContext/RecipeContext';\n\nexport default function HomePage() {\n    const { data: recipes, updateRecipe, loading, error } = useRecipeContext();\n\n    const handleFavorite = (recipeId, isFavorite) => {\n        updateRecipe(recipeId, { favorite: !isFavorite }, () => console.log(\"toggled favorite\"));\n    }\n\n    return (\n        <Page>\n            <h1>Home</h1>\n            {loading && <p>Loading...</p>}\n            {error && <pre>{JSON.stringify(error.message, null, 2)}</pre>}\n            {!error && !loading && recipes.length > 0 && \n                <Row>\n                    {recipes.map(recipe => (\n                        <Col sm=\"12\" md=\"6\" className=\"recipe-card-container\" key={recipe.id}><RecipeCard {...recipe} onFavorite={handleFavorite} /></Col>\n                    ))}\n                </Row>\n            }\n            {!error && !loading && recipes.length === 0 && \n                <>\n                    <p>You currently have no saved recipes.</p>\n                    <p><Link to=\"/new\">Click here</Link> to add a new recipe.</p>\n                </>\n            }\n        </Page>\n    )   \n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col } from 'react-bootstrap';\n\nimport Page from '../Page/Page';\nimport RecipeCard from '../../components/app/RecipeCard/RecipeCard';\nimport { useRecipeContext } from '../../contexts/RecipeContext/RecipeContext';\n\nexport default function FavoritesPage(props) {\n    const { data: recipes, updateRecipe, loading, error } = useRecipeContext();\n\n    //console.log(recipes) //TODO: Fix: logs <empty string> when no recipes (reason for extra check of length)\n    const favoritedRecipes = recipes && recipes.length > 0 && recipes?.filter(recipe => recipe.favorite);\n\n    const handleFavorite = (recipeId, isFavorite) => {\n        updateRecipe(recipeId, { favorite: !isFavorite });\n    }\n\n    return (\n        <Page>\n            <h1>Favorites</h1>\n            {loading && <p>Loading...</p>}\n            {error && <pre>{JSON.stringify(error.message, null, 2)}</pre>}\n            {!error && !loading && favoritedRecipes.length > 0 && \n                <Row>\n                    {favoritedRecipes.map(recipe => (\n                        <Col sm=\"12\" md=\"6\" key={recipe.id} className=\"recipe-card-container\"><RecipeCard {...recipe} onFavorite={handleFavorite} /></Col>\n                    ))}\n                </Row>\n            }\n            {!error && !loading && favoritedRecipes.length === 0 && \n                <>\n                    <p>You currently have no favorited recipes.</p>\n                    <p><Link to=\"/new\">Click here</Link> to add a new recipe.</p>\n                </>\n            }\n        </Page>\n    )   \n}","import React from 'react';\nimport Button from 'react-bootstrap/Button'\n\nexport default function SelectInput({ children, options, placeholder, ...props }) {\n    return (\n        <Button as=\"select\" {...props} >\n            { placeholder && <option value=\"\">{placeholder}</option>}\n            { options ? options.map(option => (<option key={option} value={option}>{option}</option>)) : children }\n        </Button>\n    )\n}","import React from 'react';\nimport { Field } from 'formik';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport { Trash } from 'react-bootstrap-icons';\nimport { SelectInput } from '..';\n\nimport './IngredientInput.css';\n\nexport default function IngredientInput({ index, arrayHelpers }) {\n    return (\n        <Row className=\"ingredient-input\">\n            <Col xs={6}>    \n                <Field \n                    name={`ingredients.${index}.name`} type=\"input\" placeholder={`Ingredient #${index+1}`}\n                />\n                <Field \n                    name={`ingredients.${index}.amount`} type=\"number\" placeholder=\"Amount\" min={0}\n                />\n            </Col>\n            <Col xs={4}>\n                <Field\n                    as={SelectInput} options={['small', 'medium', 'large']}\n                    name={`ingredients.${index}.size`} placeholder=\"size\"\n                    variant=\"secondary\"\n                />\n                <Field\n                    as={SelectInput} options={['teaspoon','tablespoon','cup','ounce','pound','gram']}\n                    name={`ingredients.${index}.measurement`} placeholder=\"unit\"\n                    variant=\"secondary\"\n                />\n            </Col>\n            <Col xs={2}>\n                <Button className=\"add-ingredient-btn\" variant=\"secondary\" onClick={() => arrayHelpers.remove(index)}>\n                    <Trash />\n                </Button>\n            </Col>\n        </Row>\n    )\n}","import React from 'react';\nimport { Field } from 'formik';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport { Trash } from 'react-bootstrap-icons';\n\nimport './TextareaListInput.css';\n\nexport default function TextareaListInput({ name, index, arrayHelpers, placeholder }) {\n    return (\n        <Row className=\"textarea-list-input\">\n            <Col xs={10}>    \n                <Field \n                    name={`${name}.${index}`} as=\"textarea\" placeholder={`${placeholder} #${index+1}`} \n                />\n            </Col>\n            <Col xs={2}>\n                <Button variant=\"secondary\" onClick={() => arrayHelpers.remove(index)}>\n                    <Trash />\n                </Button>\n            </Col>\n        </Row>\n    )\n}","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport './InputContainer.css';\n\nexport default function InputContainer({ name, label, children }) {\n    return (\n        <Row className=\"input-container\">\n            <Col xs={3}>\n                <label htmlFor={name}>{label}</label>\n            </Col>\n            { children.length ? \n                children.map((child, index) => <Col key={index} className=\"mx-2\">{child}</Col>) : \n                <Col className=\"mx-2\">{children}</Col>\n            }\n        </Row>\n    );\n}","import React from 'react';\nimport { FieldArray } from 'formik';\nimport { Row, Col, Button } from 'react-bootstrap';\n\nimport \"./InputList.css\";\n\nexport default function InputList({ name, label, listItems, renderItem, initialItemValue }) {\n    return (\n        <FieldArray\n            name={name}\n            render={arrayHelpers => (\n                <div className=\"input-list\">\n                    <Row>\n                        <Col xs={3} lg={4}>\n                            <label htmlFor={name}>{label}</label>\n                        </Col>\n                        <Col xs={3} lg={1}>\n                            <Button\n                                type=\"button\"\n                                size=\"sm\"\n                                variant=\"secondary\"\n                                onClick={() => arrayHelpers.push(initialItemValue)}\n                            >\n                                Add\n                            </Button>\n                        </Col>\n                    </Row>\n                    {listItems.map((item, index) => (\n                        renderItem(item, index, arrayHelpers)\n                    ))}\n                </div>\n            )}\n        />\n    );\n}","import React from 'react';\nimport { HeartFill } from 'react-bootstrap-icons';\nimport './Heart.css';\n\nfunction Heart() {\n    return (\n        <div className=\"heart-icon-spinner-container\">\n            <HeartFill className='heart-icon-spinner'/>\n        </div>\n    )\n}\n\nexport default Heart;","import * as Yup from 'yup';\n\nconst recipeSchema = Yup.object().shape({\n    title: Yup.string()\n        .min(3, 'Too Short!')\n        .max(32, 'Too Long!')\n        .required('Please provide a title.'),\n    description: Yup.string().required(\"Please provide a description.\"),\n    prep: Yup.object({\n        time: Yup.number().typeError(\"Please provide a number for prep time\").required(\"Please provide a prep time\"),\n        unit: Yup.string().required(\"Required.\")\n    }),\n    cook: Yup.object({\n        time: Yup.number().typeError(\"Please provide a number for cook time\").required(\"Please provide a cook time\"),\n        unit: Yup.string().required(\"Required.\")\n    }),\n    ingredients: Yup.array().min(1, \"Please provide the ingredients list.\"),\n    instructions: Yup.array().min(1, \"Please provide the instructions list\").required(\"Please provide the instructions list.\"),\n    comments: Yup.array(),\n});\n\nexport default recipeSchema;","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Button } from 'react-bootstrap';\nimport * as Inputs from '../../input';\nimport Heart from '../../display/spinners/Heart/Heart';\nimport recipeSchema from '../../../utility/validationSchema/recipeSchema';\n\nimport './NewRecipeForm.css';\n\nconst initialValues = {\n    title: \"\",\n    description: \"\",\n    serves: \"\",\n    prep: {\n        time: \"\",\n        unit: \"min\"\n    },\n    cook: {\n        time: \"\",\n        unit: \"min\"\n    },\n    ingredients: [],\n    instructions: [],\n    comments: [],\n    categories: [],\n    photo: null\n}\n\nexport default function NewRecipeForm({ onSubmit }) {\n    return (\n        <Formik\n            initialValues={initialValues}\n            onSubmit={(values, { setSubmitting }) => {\n                const formData = new FormData();\n                formData.append(\"title\", values.title);\n                formData.append(\"description\", values.description);\n                formData.append(\"serves\", values.serves);\n                formData.append(\"prep\", JSON.stringify(values.prep));\n                formData.append(\"cook\", JSON.stringify(values.cook));\n                formData.append(\"ingredients\", JSON.stringify(values.ingredients));\n                formData.append(\"instructions\", JSON.stringify(values.instructions));\n                formData.append(\"comments\", JSON.stringify(values.comments));\n                formData.append(\"photo\", values.photo || \"\");\n                setSubmitting(true);\n                onSubmit(formData, () => {\n                    setSubmitting(false);\n                });\n            }}\n            validationSchema={recipeSchema}\n        >\n            {({ isSubmitting, values, setFieldValue }) => (\n                <Form>\n                    <Inputs.InputContainer name=\"title\" label=\"Title:\">\n                        <Field name=\"title\" placeholder=\"Recipe Title\" type=\"input\" />\n                    </Inputs.InputContainer>\n                    <ErrorMessage name=\"title\" component=\"div\" className=\"form-error-message\" />\n\n                    <Inputs.InputContainer name=\"description\" label=\"Description:\">\n                        <Field name=\"description\" placeholder=\"Recipe Description\" as=\"textarea\" />\n                    </Inputs.InputContainer>\n                    <ErrorMessage name=\"description\" component=\"div\" className=\"form-error-message\" />\n\n\n                    <Inputs.InputContainer name=\"serves\" label=\"Serves:\">\n                        <Field name=\"serves\" placeholder=\"Serves\" type=\"number\" min={1} />\n                    </Inputs.InputContainer>\n                    <ErrorMessage name=\"serves\" component=\"div\" className=\"form-error-message\" />\n\n\n                    <Inputs.InputContainer name=\"prep\" label=\"Prep:\">\n                        <Field name=\"prep.time\" type=\"number\" min={1}/>\n                        <Field name=\"prep.unit\" as={Inputs.SelectInput} options={['min', 'hr']} variant=\"secondary\" />\n                    </Inputs.InputContainer>\n                    <ErrorMessage name=\"prep.time\" component=\"div\" className=\"form-error-message\" />\n\n                    <Inputs.InputContainer name=\"cook\" label=\"Cook:\">\n                        <Field name=\"cook.time\" type=\"number\" min={1}/>\n                        <Field name=\"cook.unit\" as={Inputs.SelectInput} options={['min', 'hr']} variant=\"secondary\"/>\n                    </Inputs.InputContainer>\n                    <ErrorMessage name=\"cook.time\" component=\"div\" className=\"form-error-message\" />\n\n\n                    <Inputs.InputContainer name=\"photo\" label=\"Image:\">\n                        <Field\n                            type=\"file\"\n                            name=\"photo\"\n                            value={undefined}\n                            onChange={e => {\n                                const file = e.target.files[0];\n                                setFieldValue('photo', file);\n                            }}\n                        />\n                    </Inputs.InputContainer>\n\n                    <Inputs.InputList\n                        name=\"ingredients\" label=\"Ingredients:\"\n                        listItems={values.ingredients}\n                        initialItemValue={{ name: \"\", amount: \"\", measurement: \"\", size: \"\" }}\n                        renderItem={(item, index, arrayHelpers) => <Inputs.IngredientInput key={`ingredient-${index}`} item={item} index={index} arrayHelpers={arrayHelpers} />}\n                    />\n                    <ErrorMessage name=\"ingredients\" component=\"div\" className=\"form-error-message\" />\n\n                    <Inputs.InputList\n                        name=\"instructions\" label=\"Instructions:\"\n                        listItems={values.instructions}\n                        initialItemValue=\"\"\n                        renderItem={(item, index, arrayHelpers) => (\n                            <Inputs.TextareaListInput\n                                key={`instruction-${index}`}\n                                name=\"instructions\"\n                                placeholder=\"Instruction\"\n                                item={item} index={index} arrayHelpers={arrayHelpers}\n                            />\n                        )}\n                    />\n                    <ErrorMessage name=\"instructions\" component=\"div\" className=\"form-error-message\" />\n\n\n                    <Inputs.InputList\n                        name=\"comments\" label=\"Comments:\"\n                        listItems={values.comments}\n                        initialItemValue=\"\"\n                        renderItem={(item, index, arrayHelpers) => (\n                            <Inputs.TextareaListInput\n                                key={`comment-${index}`}\n                                name=\"comments\"\n                                placeholder=\"Comment\"\n                                item={item} index={index} arrayHelpers={arrayHelpers}\n                            />\n                        )}\n                    />\n\n                    <Button type=\"submit\" disabled={isSubmitting} variant=\"secondary\">\n                        {isSubmitting ? \n                            <div>\n                                <Heart />\n                                <div>Submitting...</div>\n                            </div>\n                        : \"Submit\"\n                        }\n                    </Button>\n                </Form>\n            )}\n        </Formik>\n    )\n}","import React from 'react';\nimport Page from '../Page/Page';\nimport NewRecipeForm from '../../components/form/NewRecipeForm/NewRecipeForm';\nimport { useRecipeContext } from '../../contexts/RecipeContext/RecipeContext';\nimport { useNavigate } from 'react-router';\n\nexport default function NewRecipePage(props) {\n    const { createRecipe } = useRecipeContext();\n    const navigate = useNavigate();\n\n    const handleCreateRecipe = (recipeInfo, callback) => {\n        createRecipe(recipeInfo, (recipe, err) => {\n            if(err) console.error(err);\n            callback();\n            navigate('/');\n        });\n    }\n\n    return (\n        <Page>\n            <h1>New Recipe</h1>\n            <NewRecipeForm onSubmit={handleCreateRecipe}/>    \n        </Page>\n        \n    );\n}","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport Page from '../Page/Page';\nimport { useAuth } from '../../contexts/AuthContext/AuthContext';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function SettingsPage(props) {\n    const navigate = useNavigate();\n    const { logout } = useAuth();\n\n    const handleLogout = () => {\n        logout();\n        navigate('/login');\n    }\n    \n    return (\n        <Page>\n            <h1>Settings</h1>\n\n            <Button onClick={handleLogout} variant=\"secondary\">Log Out</Button>\n        </Page>\n    );\n}","import React, { createContext, useContext, useState } from 'react';\nimport { Button } from 'react-bootstrap';\n\nexport const dialogContext = createContext({});\n\nexport const useDialogContext = () => useContext(dialogContext);\n\nexport default function DialogContextProvider({ children }) {\n    const [show, setShow] = useState(false);\n    const [dialog, setDialog] = useState({\n        title: \"Dialog Box\",\n        text: \"Dialog body text\",\n        footer: <Button>Close</Button>,\n    })\n\n    return (\n        <dialogContext.Provider value={{ dialog, setDialog, show, setShow }}>\n            {children}\n        </dialogContext.Provider>\n    )\n}","import React from 'react';\nimport './List.css';\n\nfunction List({ \n    heading,\n    listItems,\n    renderItem,\n    style,\n    type = \"ul\",\n    direction = \"vertical\"\n}) {\n    const listItemComponents = listItems && listItems.map((item, index) => (\n        <li key={index}>{typeof renderItem === \"function\" ? renderItem(item) : item}</li>\n    ));\n\n    return (\n        <div className=\"list-container\">\n            <h3>{heading}</h3>\n            <div className=\"list\">\n                {(listItems && listItems.length > 0) ?\n                    (type === \"ul\") ?\n                        <ul style={style}>\n                            {listItemComponents}\n                        </ul> :\n                        <ol style={style}>\n                            {listItemComponents}\n                        </ol>\n                    :\n                    <p>This list is currently empty</p>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default List;","import React from 'react';\nimport { useNavigate } from 'react-router';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport { Heart, HeartFill, Trash } from 'react-bootstrap-icons';\nimport { useDialogContext } from '../../../contexts/DialogContext/DialogContext';\nimport List from '../../display/List/List';\n\nimport './RecipeDetails.css';\n\nexport default function RecipeDetails({ recipe, onFavorite, onDelete }) {\n    const navigate = useNavigate();\n    const { setDialog, setShow } = useDialogContext();\n    const { id, title, description, ingredients, instructions, comments, serves, prep, cook, photo, favorite } = recipe;\n\n    const handleFavoriteClick = () => onFavorite(id, favorite);\n\n    const handleDeleteClick = () => {\n        setDialog({\n            title: \"Delete Recipe\",\n            text: \"You are about to delete this recipe. This action cannot be undone. Are you sure you would like to delete this recipe?\",\n            footer: (\n                <>\n                    <Button variant=\"secondary\" onClick={() => setShow(false)}>Cancel</Button>\n                    <Button variant=\"secondary\" onClick={() => onDelete(id, () => setShow(false))}>Delete</Button>\n                </>\n            )\n        });\n        setShow(true);\n    }\n\n    const handleEditClick = () => {\n        navigate(`/recipe/${id}/edit`);\n    }\n\n    return (\n        <>\n            <Row className=\"recipe-detail-row\">\n                <Col as=\"h2\" xs=\"8\" lg=\"10\">\n                    {title}{\" \"}\n                    <span className=\"favorite-btn\">\n                        {favorite ?\n                            <HeartFill onClick={handleFavoriteClick} /> :\n                            <Heart onClick={handleFavoriteClick} />\n                        }\n                    </span>\n                </Col>\n                <Col xs=\"3\" lg=\"1\">\n                    <Button variant=\"outline-secondary\" onClick={handleEditClick}>\n                        Edit\n                    </Button>\n                </Col>\n                <Col xs=\"1\" className=\"delete-btn\">\n                    <Trash onClick={handleDeleteClick} />\n                </Col>\n            </Row>\n\n            <Row className=\"recipe-detail-row\">\n                <Col xs=\"5\">\n                    <p>{\"Serves: \" + serves}</p>\n                    <p>{\"Prep Time: \" + prep.time + \" \" + prep.unit}</p>\n                    <p>{\"Cook Time: \" + cook.time + \" \" + cook.unit}</p>\n                    <p>{\"Total Time: \" + (prep.time + cook.time) + \" \" + cook.unit}</p>\n                </Col>\n                <Col className=\"recipe-image-container\">\n                    <img src={photo.path ? `http://localhost:3005/${photo.path}` : \"\"} alt=\"\" />\n                </Col>\n            </Row>\n\n            <Row className=\"recipe-detail-row\">\n                <p>{description}</p>\n            </Row>\n\n            <Row>\n                <List\n                    type=\"ul\"\n                    heading=\"Ingredients\"\n                    listItems={ingredients}\n                    renderItem={(ingredient) => `${ingredient.amount ? ingredient.amount : \"\"} ${ingredient.measurement ? ingredient.measurement : \"\"} ${ingredient.name}${(ingredient.size ? \", \" + ingredient.size : \"\")}`}\n                />\n            </Row>\n\n            <Row>\n                <List\n                    type=\"ol\"\n                    heading=\"Instructions\"\n                    listItems={instructions}\n                />\n            </Row>\n\n            <Row>\n                <List\n                    heading=\"Additional Comments\"\n                    listItems={comments}\n                />\n            </Row>\n        </>\n    )\n}","import React from 'react';\nimport { Navigate, useParams } from 'react-router';\nimport Page from '../Page/Page';\nimport RecipeDetails from '../../components/app/RecipeDetails/RecipeDetails';\nimport { useRecipeContext } from '../../contexts/RecipeContext/RecipeContext';\n\nexport default function RecipePage(props) {\n    const { data: recipes, updateRecipe, deleteRecipe, loading, error } = useRecipeContext();\n    const { recipeId } = useParams();\n\n    const recipe = recipes && recipes?.find(rec => rec.id === Number(recipeId));\n\n    const handleFavorite = (recipeId, isFavorite) => {\n        updateRecipe(recipeId, { favorite: !isFavorite });\n    }\n\n    const handleDelete = (recipeId, callback) => {\n        deleteRecipe(recipeId, callback);\n    }\n\n    if(!recipe) {\n        return <Navigate replace to=\"/\" />\n    }\n\n    return (\n        <Page>\n            {loading && <div>Loading...</div>}\n            {error && <pre>{JSON.stringify(error, null, 2)}</pre>}\n            {!loading && !error && <RecipeDetails recipe={recipe} onFavorite={handleFavorite} onDelete={handleDelete} />}\n        </Page>\n    )\n}","import React from 'react';\nimport { useNavigate } from 'react-router';\nimport { Row, Col, Button, ButtonGroup } from 'react-bootstrap';\nimport { Formik, Form, Field } from 'formik';\nimport { SelectInput, InputList, IngredientInput, TextareaListInput } from '../../input';\n\nexport default function EditRecipeForm({ recipe, onEdit }) {\n    const navigate = useNavigate();\n    const { id, favorite, ...initialValues } = recipe;\n\n    const handleCancel = () => {\n        navigate(-1);\n    }\n\n    const handleSubmit = (values) => {\n        //Convert ingredients array to object before submitting\n        //TODO: This would best be done within context to keep business logic seperate from components.\n        //however we need initial values for ingredients to determine if any have been removed\n        const ingredientsObject = {};\n\n        //Look thru initialValues.ingredients to determine which ingredients have been removed\n        for(let ingredient of initialValues.ingredients) {\n            //If ingredient is removed set to null\n            if(values.ingredients.findIndex(ing => ing.id === ingredient.id) === -1) {\n                ingredientsObject[ingredient.name] = null;\n            }\n        }\n\n        for(let ingredient of values.ingredients) {\n            if(ingredient.id) delete ingredient.id;\n            const { name, ...ingredientValues } = ingredient;\n            ingredientsObject[name] = ingredientValues;\n        }\n\n        onEdit(id, { ...values, ingredients: ingredientsObject }, () => navigate(-1));\n    }\n\n    return (\n        <Formik\n            initialValues={initialValues}\n            onSubmit={handleSubmit}\n        >\n            {({ isSubmitting, values }) => (\n                <Form>\n                    <Row className=\"recipe-detail-row\">\n                        <Col as=\"h2\" xs=\"7\">\n                            <Field name=\"title\" placeholder=\"Recipe Title\" type=\"input\" />\n                        </Col>\n                        <Col xs=\"4\">\n                            <ButtonGroup>\n                                <Button variant=\"outline-secondary\" onClick={handleCancel}>Cancel</Button>\n                                <Button variant=\"secondary\" type=\"submit\" disabled={isSubmitting}>Save</Button>\n                            </ButtonGroup>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"recipe-detail-row\">\n                        <Col xs=\"5\">\n                            <p>Serves: <Field name=\"serves\" placeholder=\"Serves\" type=\"number\"  min={1} /></p>\n                            <p>Prep Time:\n                                <Field name=\"prep.time\" type=\"number\"  min={1} />\n                                <Field name=\"prep.unit\" as={SelectInput} options={['min', 'hr']} variant=\"secondary\" />\n                            </p>\n                            <p>Cook Time:\n                                <Field name=\"cook.time\" type=\"number\"  min={1} />\n                                <Field name=\"cook.unit\" as={SelectInput} options={['min', 'hr']} variant=\"secondary\" />\n                            </p>\n                        </Col>\n                        <Col className=\"recipe-image-container\">\n                            <img src={initialValues.photo.path ? `http://localhost:3005/${initialValues.photo.path}` : \"\"} alt=\"\" />\n                        </Col>\n                    </Row>\n\n                    <Row className=\"recipe-detail-row\">\n                        <Field name=\"description\" placeholder=\"Recipe Description\" as=\"textarea\" />\n                    </Row>\n\n                    <Row>\n                        <InputList\n                            name=\"ingredients\" label=\"Ingredients\"\n                            listItems={values.ingredients}\n                            initialItemValue={{ name: \"\", amount: \"\", measurement: \"\", size: \"\" }}\n                            renderItem={(item, index, arrayHelpers) => <IngredientInput key={`ingredient-${index}`} item={item} index={index} arrayHelpers={arrayHelpers} />}\n                        />\n                    </Row>\n\n                    <Row>\n                        <InputList\n                            name=\"instructions\" label=\"Instructions\"\n                            listItems={values.instructions}\n                            initialItemValue=\"\"\n                            renderItem={(item, index, arrayHelpers) => (\n                                <TextareaListInput\n                                    key={`instruction-${index}`}\n                                    name=\"instructions\"\n                                    placeholder=\"Instruction\"\n                                    item={item} index={index} arrayHelpers={arrayHelpers}\n                                />\n                            )}\n                        />\n                    </Row>\n\n                    <Row>\n                        <InputList\n                            name=\"comments\" label=\"Comments:\"\n                            listItems={values.comments || []}\n                            initialItemValue=\"\"\n                            renderItem={(item, index, arrayHelpers) => (\n                                <TextareaListInput\n                                    key={`comment-${index}`}\n                                    name=\"comments\"\n                                    placeholder=\"Comment\"\n                                    item={item} index={index} arrayHelpers={arrayHelpers}\n                                />\n                            )}\n                        />\n                    </Row>\n                </Form>\n            )}\n        </Formik>\n    )\n}","import React from 'react';\nimport { Navigate, useParams } from 'react-router';\nimport Page from '../Page/Page';\nimport EditRecipeForm from '../../components/form/EditRecipeForm/EditRecipeForm';\nimport { useRecipeContext } from '../../contexts/RecipeContext/RecipeContext';\n\nexport default function EditRecipePage(props) {\n    const { data: recipes, updateRecipe, loading, error } = useRecipeContext();\n    const { recipeId } = useParams();\n\n    const recipe = recipes && recipes?.find(rec => rec.id === Number(recipeId));\n\n    const handleEdit = (recipeId, newValues, callback) => {\n        updateRecipe(recipeId, newValues, callback);\n    }\n\n    if(!recipe) {\n        return <Navigate replace to=\"/\" />\n    }\n\n    return (\n        <Page>\n            {loading && <div>Loading...</div>}\n            {error && <pre>{JSON.stringify(error, null, 2)}</pre>}\n            {!loading && !error && <EditRecipeForm recipe={recipe} onEdit={handleEdit} />}\n        </Page>\n    )\n}","import React from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport { Button } from 'react-bootstrap';\nimport * as Inputs from '../../input';\n\nimport './LoginForm.css';\n\nfunction LoginForm({ onSubmit, ...props }) {\n    return (\n        <Formik\n            initialValues={{ userName: \"\", password: \"\" }}\n            onSubmit={(values, { setSubmitting }) => {\n                setSubmitting(true);\n                onSubmit(values, () => setSubmitting(false));\n            }}\n        >\n            {({ isSubmitting }) => (\n                <Form className=\"login-form\">\n                    <Inputs.InputContainer name=\"userName\" label=\"Username\">\n                        <Field name=\"userName\" type=\"input\" placeholder=\"Enter your username\" />\n                    </Inputs.InputContainer>\n\n                    <Inputs.InputContainer name=\"password\" label=\"Password\">\n                        <Field name=\"password\" type=\"password\" placeholder=\"Enter your password\" autoComplete=\"off\"/>\n                    </Inputs.InputContainer>\n\n                    {props.error && <div className=\"form-error\">{props.error}</div>}\n\n                    <Button type=\"submit\" variant=\"secondary\" disabled={isSubmitting}>\n                        Submit\n                    </Button>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default LoginForm;","import React from 'react';\nimport LoginForm from '../../components/form/LoginForm/LoginForm';\nimport Page from '../Page/Page';\nimport { useAuth } from '../../contexts/AuthContext/AuthContext';\nimport { Navigate } from 'react-router-dom';\n\nexport default function LoginPage(props) {\n    const auth = useAuth();\n    \n    const handleLogin = async (credentials, callback) => {\n        await auth.login(credentials);\n        callback();\n    }\n\n    if(!auth.loading && auth.user) return <Navigate to=\"/\" />\n\n    return (\n        <Page>\n            <h3>Log In</h3>\n            <LoginForm onSubmit={handleLogin} error={auth.error?.response?.data}/>\n        </Page>\n    )\n}","import { useState, useEffect } from \"react\";\nimport useEventListener from \"./useEventListener\";\n\nexport default function useMediaQuery(mediaQuery) {\n    const [isMatch, setIsMatch] = useState(false);\n    const [mediaQueryList, setMediaQueryList] = useState(null);\n\n    useEffect(() => {\n        const list = window.matchMedia(mediaQuery);\n        setMediaQueryList(list);\n        setIsMatch(list.matches);\n    }, [mediaQuery]);\n\n    useEventListener(\"change\", e => setIsMatch(e.matches), mediaQueryList);\n\n    return isMatch;\n}","import { useEffect, useRef } from \"react\";\n\nexport default function useEventListener(eventType, callback, element = window) {\n    const callbackRef = useRef(callback);\n\n    useEffect(() => {\n        callbackRef.current = callback;\n    }, [callback]);\n\n    useEffect(() => {\n        if (element == null) return;\n        const handler = e => callbackRef.current(e);\n        element.addEventListener(eventType, handler);\n\n        return () => element.removeEventListener(eventType, handler);\n    }, [eventType, element]);\n}","import React, { useState, useEffect, useRef } from 'react';\nimport { Button, Form, FormControl } from 'react-bootstrap';\nimport './Search.css';\n\nfunction Search({ onSubmit, initialValue }) {\n    const inputRef = useRef(null);\n    const [showClearBtn, setShowClearBtn] = useState(initialValue && initialValue.length > 0);\n\n    useEffect(() => {\n        inputRef.current.value = initialValue;\n    }, [initialValue]);\n\n    const handleKeyPress = (e) => {\n        if(e.key === \"Enter\") {\n            e.preventDefault();\n            inputRef.current.blur();\n            typeof onSubmit === \"function\" && onSubmit(inputRef.current.value);\n        }\n    }\n\n    const handleInputChange = (e) => {\n        if(e.target.value.length > 0) setShowClearBtn(true);\n        else setShowClearBtn(false);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        typeof onSubmit === \"function\" && onSubmit(inputRef.current.value);\n    }\n\n    const handleClear = () => {\n        inputRef.current.value = \"\";\n        setShowClearBtn(false);\n        typeof onSubmit === \"function\" && onSubmit(\"\");\n    }\n\n    return (\n        <Form className=\"search-form\" onSubmit={handleSubmit}>\n            <FormControl\n                type=\"search\"\n                placeholder=\"Search\"\n                aria-label=\"Search\"\n                className=\"search-bar\"\n                onKeyPress={handleKeyPress}\n                onChange={handleInputChange}\n                ref={inputRef}\n            />\n            <Button className={`clear-btn ${showClearBtn ? \"show\" : \"hide\"}`} variant=\"outline-secondary\" onClick={handleClear}>x</Button>\n            <Button variant=\"secondary\" type=\"submit\" className=\"mx-2\">Search</Button>\n        </Form>\n    )\n}\n\nexport default Search;","import React from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport default function NavIconLink({ to, text = \"\", IconComponent, IconFillComponent }) {\n    const { pathname } = useLocation();\n\n    return (\n        <Nav.Item as={Link} to={to} className=\"nav-link\">\n            {pathname === to ?\n                <IconFillComponent size={40} className=\"mx-2\" /> :\n                <IconComponent size={40} className=\"mx-2\" />\n            } {text}\n        </Nav.Item>\n    );\n}","import React from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { \n    House, HouseFill, \n    PlusCircle, PlusCircleFill, \n    Heart, HeartFill, \n    Gear, GearFill \n} from 'react-bootstrap-icons';\n\nimport NavIconLink from '../../display/NavIconLink/NavIconLink';\n\nexport default function NavLinks() {\n    return (\n        <Nav className=\"nav-links\">\n            <NavIconLink to=\"/\" text=\"Home\" IconComponent={House} IconFillComponent={HouseFill} />\n            <NavIconLink to=\"/favorites\" text=\"Favorites\" IconComponent={Heart} IconFillComponent={HeartFill} />\n            <NavIconLink to=\"/new\" text=\"New\" IconComponent={PlusCircle} IconFillComponent={PlusCircleFill} />\n            <NavIconLink to=\"/settings\" text=\"Settings\" IconComponent={Gear} IconFillComponent={GearFill} />\n        </Nav>\n    )\n}","import React from 'react';\nimport { Button, Navbar, Nav } from 'react-bootstrap';\nimport { useLocation, useNavigate } from 'react-router';\nimport { useAuth } from '../../../contexts/AuthContext/AuthContext';\nimport { useRecipeContext } from '../../../contexts/RecipeContext/RecipeContext';\nimport useMediaQuery from '../../../hooks/useMediaQuery';\nimport Search from '../../input/Search/Search';\nimport NavLinks from '../NavLinks/NavLinks';\n\nimport './TopNav.css';\n\nexport default function TopNav({ onShowFilter }) {\n    const { filter, updateFilter } = useRecipeContext();\n    const isLargeScreen = useMediaQuery(\"(min-width: 1081px)\");\n    const { pathname } = useLocation();\n    const navigate = useNavigate();\n    const auth = useAuth();\n\n    if(!auth.user) return null;\n\n    return (\n        <>\n            {(isLargeScreen) && <Navbar className=\"top-bar\">\n                <Nav className=\"top-bar-nav\">\n                    <NavLinks />\n                </Nav>\n            </Navbar>}\n            <Navbar className=\"top-bar\" sticky=\"top\">\n                <Nav className=\"top-bar-nav\">\n                    <Nav.Item>\n                        <Button\n                            variant=\"outline-secondary\"\n                            onClick={() => navigate(-1)}\n                        >\n                            Back\n                        </Button>\n                    </Nav.Item>\n\n                    {(pathname === '/' || pathname === '/favorites') &&\n                        <>\n                            <Nav.Item>\n                                <Button\n                                    variant=\"secondary\"\n                                    className=\"show-filters-btn\"\n                                    onClick={onShowFilter}\n                                >\n                                    Filters\n                                </Button>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Search\n                                    onSubmit={(value) => updateFilter({ search: value })}\n                                    initialValue={filter.search}\n                                />\n\n                            </Nav.Item>\n                        </>\n                    }\n                </Nav>\n            </Navbar>\n        </>\n    )\n}","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavLinks from '../NavLinks/NavLinks';\nimport useMediaQuery from '../../../hooks/useMediaQuery';\nimport { useAuth } from '../../../contexts/AuthContext/AuthContext';\n\nimport './BottomNav.css';\n\nexport default function BottomNav(props) {\n    const shouldDisplay = useMediaQuery(\"(max-width: 1080px)\");\n    const auth = useAuth();\n\n    if(!auth.user) return null;\n\n    return (\n        <Navbar className={`bottom-bar ${shouldDisplay ? \"\" : \"hide\"}`} fixed=\"bottom\">\n            <NavLinks />\n        </Navbar>\n    )\n}","import React from 'react';\nimport { Offcanvas } from 'react-bootstrap';\n\nfunction SlideinSidebar(props) {\n    return (\n        <Offcanvas show={props.show} onHide={props.onClose} {...props}>\n          <Offcanvas.Header closeButton>\n            <Offcanvas.Title>{props.title}</Offcanvas.Title>\n          </Offcanvas.Header>\n          <Offcanvas.Body>\n            {props.children}\n          </Offcanvas.Body>\n        </Offcanvas>\n    );\n  }\n\n  export default SlideinSidebar;","import React, { useState } from 'react';\nimport { FormControl } from 'react-bootstrap';\nimport './Autocomplete.css';\n\nfunction Autocomplete({ suggestions, placeholder, onSubmit }) {\n    const [userInput, setUserInput] = useState(\"\");\n    const [filteredSuggestions, setFilteredSuggestions] = useState([]);\n    const [activeSuggestion, setActiveSuggestion] = useState(-1);\n    const [showSuggestions, setShowSuggestions] = useState(false);\n\n    // useEffect(() => {\n    //     console.group(\"Autocomplete State and Props\");\n    //     console.log(\"User input:\", userInput);\n    //     console.log(\"Filtered suggestions:\", filteredSuggestions);\n    //     console.log(\"Active suggestion:\", activeSuggestion);\n    //     console.log(\"Show:\", showSuggestions);\n    //     console.log(\"Suggestions:\", suggestions);\n    //     console.groupEnd();\n    // }, [userInput, filteredSuggestions, activeSuggestion, showSuggestions, suggestions]);\n\n    const handleSubmit = (submitValue) => {\n        if(!onSubmit) return;\n        if(submitValue) {\n            onSubmit(submitValue);\n        } else {\n            const suggIdx = filteredSuggestions.findIndex(item => item.name.toLowerCase() === userInput.toLowerCase());\n            if(suggIdx > -1) onSubmit(filteredSuggestions[suggIdx]);\n        }\n    }\n\n    const handleChange = e => {\n        const input = e.currentTarget.value;\n\n        const newFilteredSuggestions = suggestions.filter(suggestion =>\n            suggestion.name.toLowerCase().indexOf(input.toLowerCase()) > -1\n        );\n\n        setActiveSuggestion(-1);\n        setFilteredSuggestions(newFilteredSuggestions);\n        \n        //Show suggestions if input has not changed to empty string\n        if(input !== \"\" ) setShowSuggestions(true);\n        else setShowSuggestions(false);\n\n        setUserInput(input);\n    };\n\n    const handleKeyDown = e => {\n        const keyCode = e.keyCode;\n\n        if (keyCode === 13) {\n            e.preventDefault();\n            if(activeSuggestion === -1 && userInput === \"\") return;\n            if(activeSuggestion > -1) {\n                handleSubmit(filteredSuggestions[activeSuggestion])\n            } else handleSubmit();\n            setActiveSuggestion(-1);\n            setShowSuggestions(false);\n            setUserInput(\"\");\n        } else if (keyCode === 38) {\n            if (activeSuggestion === 0 || !showSuggestions) return;\n            setActiveSuggestion(prevActiveSuggestion => prevActiveSuggestion - 1);\n        } else if (keyCode === 40) {\n            if (activeSuggestion + 1 === filteredSuggestions.length || !showSuggestions) return;\n            setActiveSuggestion(prevActiveSuggestion => prevActiveSuggestion + 1);\n        }\n    };\n\n    const handleClick = e => {\n        const clickedSuggestion = { id: e.currentTarget.value, name: e.currentTarget.innerText };\n        setActiveSuggestion(-1);\n        setFilteredSuggestions([]);\n        setShowSuggestions(false);\n        setUserInput(\"\");\n        handleSubmit(clickedSuggestion);\n    };\n\n    const suggestionsListComponent = (showSuggestions && userInput !== \"\") ?\n        ((filteredSuggestions.length) ? (\n            <ul className=\"suggestions-list\">\n                {filteredSuggestions.map((suggestion, index) => {\n                    let className;\n\n                    // Flag the active suggestion with a class\n                    if (index === activeSuggestion) {\n                        className = \"suggestion-active\";\n                    }\n                    return (\n                        <li className={className} key={suggestion.id} value={suggestion.id} onClick={handleClick}>\n                            {suggestion.name}\n                        </li>\n                    );\n                })}\n            </ul>\n        ) : (\n            <div className=\"no-suggestions\">\n                <em>No suggestions available.</em>\n            </div>\n        )\n        ) : null\n\n    return (\n        <div className=\"autocomplete-container\">\n            <FormControl\n                className=\"autocomplete-input-bar\"\n                type=\"search\"\n                onChange={handleChange}\n                onKeyDown={handleKeyDown}\n                value={userInput}\n                placeholder={placeholder}\n            />\n            {suggestionsListComponent}\n        </div>\n    );\n}\n\nexport default Autocomplete;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { FieldArray } from 'formik';\nimport { Trash } from 'react-bootstrap-icons';\nimport Autocomplete from '../Autocomplete/Autocomplete';\nimport './AutocompleteList.css';\n\nfunction AutocompleteList({ name, listItems, suggestions, onChange }) {\n    const handleSubmit = (values) => {\n        onChange && onChange(values);\n    }\n\n    return (\n        <>\n            <Autocomplete\n                suggestions={suggestions}\n                placeholder=\"Enter an ingredient to add to list\"\n                onSubmit={handleSubmit}\n            />\n            <FieldArray\n                name={name}\n                render={arrayHelpers => (\n                    <ul className=\"autocomplete-list\">\n                        {listItems.map((item, index) => (\n                            <Row as=\"li\" key={index}>\n                                <Col xs={1}>\n                                    <Trash\n                                        onClick={() => {\n                                            arrayHelpers.remove(index)\n                                        }} \n                                    />\n                                </Col>\n                                <Col>\n                                    {item.name}\n                                </Col>\n                            </Row>\n                        ))}\n                    </ul>\n                )}\n            />\n        </>\n    )\n}\n\nexport default AutocompleteList;","import React from 'react';\nimport { Row, Button } from 'react-bootstrap';\nimport { Formik, Form } from 'formik';\n\nimport AutocompleteList from '../../input/AutocompleteList/AutocompleteList';\nimport './FilterRecipesForm.css';\n\nfunction FilterRecipesForm({ initialFilter, onSubmit, ingredients }) {\n    const handleClearFilters = () => {\n        onSubmit({\n            ingredients: []\n        });\n    }\n\n    return (\n        <Formik\n            initialValues={initialFilter}\n            onSubmit={(values) => {\n                onSubmit({\n                    ingredients: values.ingredients\n                });\n            }}\n        >\n            {(form) => (\n                <Form className=\"filter-recipes-form\">\n                    <Row>\n                        <h5>Ingredients</h5>\n                        <AutocompleteList\n                            name=\"ingredients\"\n                            suggestions={ingredients}\n                            listItems={form.values.ingredients}\n                            onChange={(value) => {\n                                form.setFieldValue('ingredients', [...form.values.ingredients, value]);\n                            }}\n                        />\n                    </Row>\n\n                    <Row>\n                        <Button variant=\"outline-secondary\" className=\"clear-filters-btn\" onClick={handleClearFilters}>Clear</Button>\n                        <Button variant=\"secondary\" className=\"apply-filters-btn\" type=\"submit\">Apply</Button>\n                    </Row>\n\n                </Form>\n            )}\n        </Formik>\n    )\n\n}\n\nexport default FilterRecipesForm;","import React from 'react';\nimport { useRecipeContext } from '../../../contexts/RecipeContext/RecipeContext';\nimport useResource from '../../../hooks/useResource';\n\nimport SlideinSidebar from '../../display/SlideinSidebar/SlideinSidebar';\nimport FilterRecipesForm from '../../form/FilterRecipesForm/FilterRecipesForm';\n\nfunction FilterControlSidebar({ show, onClose }) {\n    const { filter, updateFilter } = useRecipeContext();\n    const { value: ingredients} = useResource('/api/ingredients');\n\n    const handleApplyFilter = (filter) => {\n        updateFilter(filter);\n        onClose();\n    }\n\n    return (\n        <SlideinSidebar show={show} onClose={onClose} title=\"Select your filters\">\n            <FilterRecipesForm\n                initialFilter={filter}\n                onSubmit={handleApplyFilter}\n                ingredients={ingredients}\n            />\n        </SlideinSidebar>\n    )\n}\n\nexport default FilterControlSidebar;","import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { useDialogContext } from '../../../contexts/DialogContext/DialogContext';\n\nexport default function Dialog(props) {\n    const { dialog, show, setShow } = useDialogContext();\n\n    return (\n        <Modal show={show} onHide={() => setShow(false)}>\n            <Modal.Header closeButton>\n                <Modal.Title>{dialog.title}</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                <p>{dialog.text}</p>\n            </Modal.Body>\n\n            <Modal.Footer>\n                {dialog.footer}\n            </Modal.Footer>\n        </Modal>\n    )\n}","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport useToggle from './hooks/useToggle';\nimport HomePage from './pages/HomePage/HomePage';\nimport FavoritesPage from './pages/FavoritesPage/FavoritesPage';\nimport NewRecipePage from './pages/NewRecipePage/NewRecipePage';\nimport SettingsPage from './pages/SettingsPage/SettingsPage';\nimport RecipePage from './pages/RecipePage/RecipePage';\nimport EditRecipePage from './pages/EditRecipePage/EditRecipePage';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport TopNav from './components/app/TopNav/TopNav';\nimport BottomNav from './components/app/BottomNav/BottomNav';\nimport FilterControlSidebar from './components/app/FilterControlSidebar/FilterControlSidebar';\nimport Dialog from './components/display/Dialog/Dialog';\n\nimport DialogContextProvider from './contexts/DialogContext/DialogContext';\nimport RecipeContextProvider from './contexts/RecipeContext/RecipeContext';\nimport AuthContextProvider, { useAuth } from './contexts/AuthContext/AuthContext';\n\nimport './App.css';\n\nfunction PrivateRoute({ children }) {\n\tconst auth = useAuth();\n\n\tif (auth.loading) return <div>Loading...</div>\n\n\treturn (\n\t\tauth.user ? children : <Navigate to=\"/login\" />\n\t)\n}\n\nfunction App() {\n\tconst [isShown, toggleShow] = useToggle(false);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<AuthContextProvider>\n\t\t\t\t<DialogContextProvider>\n\t\t\t\t\t<RecipeContextProvider>\n\t\t\t\t\t\t<FilterControlSidebar\n\t\t\t\t\t\t\tshow={isShown}\n\t\t\t\t\t\t\tonClose={() => toggleShow(false)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Dialog />\n\t\t\t\t\t\t<Router>\n\t\t\t\t\t\t\t<TopNav onShowFilter={() => toggleShow(true)} />\n\n\t\t\t\t\t\t\t<Routes>\n\t\t\t\t\t\t\t\t<Route path=\"/login\" element={<LoginPage />} />\n\t\t\t\t\t\t\t\t<Route path=\"/\" element={<PrivateRoute><HomePage /></PrivateRoute>} />\n\t\t\t\t\t\t\t\t<Route path=\"/favorites\" element={<PrivateRoute><FavoritesPage /></PrivateRoute>} />\n\t\t\t\t\t\t\t\t<Route path=\"/new\" element={<PrivateRoute><NewRecipePage /></PrivateRoute>} />\n\t\t\t\t\t\t\t\t<Route path=\"/settings\" element={<PrivateRoute><SettingsPage /></PrivateRoute>} />\n\t\t\t\t\t\t\t\t<Route path=\"/recipe/:recipeId\" element={<PrivateRoute><RecipePage /></PrivateRoute>} />\n\t\t\t\t\t\t\t\t<Route path=\"/recipe/:recipeId/edit\" element={<PrivateRoute><EditRecipePage /></PrivateRoute>} />\n\t\t\t\t\t\t\t</Routes>\n\n\t\t\t\t\t\t\t<BottomNav />\n\t\t\t\t\t\t</Router>\n\t\t\t\t\t</RecipeContextProvider>\n\t\t\t\t</DialogContextProvider>\n\t\t\t</AuthContextProvider>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { useState } from \"react\"\n\nexport default function useToggle(defaultValue) {\n  const [value, setValue] = useState(defaultValue)\n\n  function toggleValue(value) {\n    setValue(currentValue =>\n      typeof value === \"boolean\" ? value : !currentValue\n    )\n  }\n\n  return [value, toggleValue]\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}